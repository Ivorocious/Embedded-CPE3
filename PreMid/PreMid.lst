

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Mar 09 22:58:34 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001D                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  0081                     	;# 
    54  0085                     	;# 
    55  0086                     	;# 
    56  0087                     	;# 
    57  0088                     	;# 
    58  0089                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0098                     	;# 
    67  0099                     	;# 
    68  009C                     	;# 
    69  009D                     	;# 
    70  009E                     	;# 
    71  009F                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  010F                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78  0007                     _PORTC	set	7
    79  0008                     _PORTD	set	8
    80  005F                     _GIE	set	95
    81  005C                     _INTE	set	92
    82  0059                     _INTF	set	89
    83  0030                     _RB0	set	48
    84  0035                     _RB5	set	53
    85  0036                     _RB6	set	54
    86  0037                     _RB7	set	55
    87  005D                     _TMR0IE	set	93
    88  005A                     _TMR0IF	set	90
    89  0081                     _OPTION_REG	set	129
    90  0086                     _TRISB	set	134
    91  0087                     _TRISC	set	135
    92  0088                     _TRISD	set	136
    93                           
    94                           	psect	text0
    95  0000                     __ptext0:	
    96                           ; #config settings
    97                           
    98                           
    99                           ;psect for function _ISR
   100  0000                     
   101                           	psect	cinit
   102  0015                     start_initialization:	
   103  0015                     __initialization:	
   104                           
   105                           ; Clear objects allocated to BITCOMMON
   106  0015  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   107  0016                     end_of_initialization:	
   108                           ;End of C runtime variable initialization code
   109                           
   110  0016                     __end_of__initialization:	
   111  0016  0183               	clrf	3
   112  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   113                           
   114                           	psect	bitbssCOMMON
   115  03C8                     __pbitbssCOMMON:	
   116  03C8                     _myINTF:	
   117  03C8                     	ds	1
   118  03C9                     _myTMR0IF:	
   119  03C9                     	ds	1
   120                           
   121                           	psect	cstackCOMMON
   122  0070                     __pcstackCOMMON:	
   123  0070                     ?_ISR:	
   124  0070                     ??_ISR:	
   125                           ; 0 bytes @ 0x0
   126                           
   127  0070                     ?_instCtrl:	
   128                           ; 0 bytes @ 0x0
   129                           
   130  0070                     ?_dataCtrl:	
   131                           ; 0 bytes @ 0x0
   132                           
   133  0070                     ?_main:	
   134                           ; 0 bytes @ 0x0
   135                           
   136  0070                     ?_initLCD:	
   137                           ; 0 bytes @ 0x0
   138                           
   139                           
   140                           ; 2 bytes @ 0x0
   141  0070                     	ds	4
   142  0074                     ?_delay:	
   143  0074                     ?_delay1:	
   144                           ; 0 bytes @ 0x4
   145                           
   146  0074                     delay@count:	
   147                           ; 0 bytes @ 0x4
   148                           
   149  0074                     delay1@MUL:	
   150                           ; 2 bytes @ 0x4
   151                           
   152                           
   153                           ; 2 bytes @ 0x4
   154  0074                     	ds	2
   155  0076                     ??_delay:	
   156  0076                     ??_delay1:	
   157                           ; 0 bytes @ 0x6
   158                           
   159  0076                     ??_instCtrl:	
   160                           ; 0 bytes @ 0x6
   161                           
   162  0076                     instCtrl@INST:	
   163                           ; 0 bytes @ 0x6
   164                           
   165                           
   166                           ; 1 bytes @ 0x6
   167  0076                     	ds	1
   168  0077                     ??_initLCD:	
   169  0077                     delay@of_count:	
   170                           ; 0 bytes @ 0x7
   171                           
   172                           
   173                           ; 2 bytes @ 0x7
   174  0077                     	ds	2
   175  0079                     ??_dataCtrl:	
   176                           
   177                           	psect	cstackBANK0
   178  0020                     __pcstackBANK0:	
   179                           ; 0 bytes @ 0x9
   180                           
   181  0020                     dataCtrl@DATA:	
   182  0020                     delay1@i:	
   183                           ; 1 bytes @ 0x0
   184                           
   185                           
   186                           ; 2 bytes @ 0x0
   187  0020                     	ds	2
   188  0022                     delay1@j:	
   189                           
   190                           ; 2 bytes @ 0x2
   191  0022                     	ds	2
   192  0024                     ??_main:	
   193                           
   194                           ; 0 bytes @ 0x4
   195  0024                     	ds	2
   196  0026                     main@STORE:	
   197                           
   198                           ; 1 bytes @ 0x6
   199  0026                     	ds	1
   200  0027                     main@DATA:	
   201                           
   202                           ; 1 bytes @ 0x7
   203  0027                     	ds	1
   204  0028                     main@MSB:	
   205                           
   206                           ; 1 bytes @ 0x8
   207  0028                     	ds	1
   208  0029                     main@LSB:	
   209                           
   210                           ; 1 bytes @ 0x9
   211  0029                     	ds	1
   212  002A                     main@fspeed:	
   213                           
   214                           ; 1 bytes @ 0xA
   215  002A                     	ds	1
   216  002B                     main@speed:	
   217                           
   218                           ; 1 bytes @ 0xB
   219  002B                     	ds	1
   220                           
   221                           	psect	maintext
   222  001A                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 83 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PreMid\PreMidPrac.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  speed           1   11[BANK0 ] unsigned char 
   233 ;;  fspeed          1   10[BANK0 ] unsigned char 
   234 ;;  LSB             1    9[BANK0 ] unsigned char 
   235 ;;  MSB             1    8[BANK0 ] unsigned char 
   236 ;;  DATA            1    7[BANK0 ] unsigned char 
   237 ;;  STORE           1    6[BANK0 ] unsigned char 
   238 ;; Return value:  Size  Location     Type
   239 ;;		None               void
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 17F/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       6       0       0       0
   249 ;;      Temps:          0       2       0       0       0
   250 ;;      Totals:         0       8       0       0       0
   251 ;;Total ram usage:        8 bytes
   252 ;; Hardware stack levels required when called:    4
   253 ;; This function calls:
   254 ;;		_dataCtrl
   255 ;;		_delay
   256 ;;		_initLCD
   257 ;;		_instCtrl
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           
   264                           ;psect for function _main
   265  001A                     _main:	
   266                           
   267                           ;PreMidPrac.c: 85: TRISB = 0x01;
   268                           
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   271  001A  3001               	movlw	1
   272  001B  1683               	bsf	3,5	;RP0=1, select bank1
   273  001C  1303               	bcf	3,6	;RP1=0, select bank1
   274  001D  0086               	movwf	6	;volatile
   275                           
   276                           ;PreMidPrac.c: 86: TRISC = 0x00;
   277  001E  0187               	clrf	7	;volatile
   278                           
   279                           ;PreMidPrac.c: 87: TRISD = 0xFF;
   280  001F  30FF               	movlw	255
   281  0020  0088               	movwf	8	;volatile
   282                           
   283                           ;PreMidPrac.c: 89: unsigned char DATA;
   284                           ;PreMidPrac.c: 90: unsigned char STORE;
   285                           ;PreMidPrac.c: 91: unsigned char MSB = 0x00;
   286  0021  1283               	bcf	3,5	;RP0=0, select bank0
   287  0022  1303               	bcf	3,6	;RP1=0, select bank0
   288  0023  01A8               	clrf	main@MSB
   289                           
   290                           ;PreMidPrac.c: 92: unsigned char LSB = 0x00;
   291  0024  01A9               	clrf	main@LSB
   292                           
   293                           ;PreMidPrac.c: 93: unsigned char speed;
   294                           ;PreMidPrac.c: 94: unsigned char fspeed = 122;
   295  0025  307A               	movlw	122
   296  0026  00A4               	movwf	??_main
   297  0027  0824               	movf	??_main,w
   298  0028  00AA               	movwf	main@fspeed
   299                           
   300                           ;PreMidPrac.c: 96: initLCD();
   301  0029  120A  118A  21F3  120A  118A  	fcall	_initLCD
   302                           
   303                           ;PreMidPrac.c: 98: OPTION_REG = 0xC4;
   304  002E  30C4               	movlw	196
   305  002F  1683               	bsf	3,5	;RP0=1, select bank1
   306  0030  1303               	bcf	3,6	;RP1=0, select bank1
   307  0031  0081               	movwf	1	;volatile
   308                           
   309                           ;PreMidPrac.c: 100: INTF = 0;
   310  0032  108B               	bcf	11,1	;volatile
   311                           
   312                           ;PreMidPrac.c: 101: INTE = 1;
   313  0033  160B               	bsf	11,4	;volatile
   314                           
   315                           ;PreMidPrac.c: 103: TMR0IF = 0;
   316  0034  110B               	bcf	11,2	;volatile
   317                           
   318                           ;PreMidPrac.c: 104: TMR0IE = 1;
   319  0035  168B               	bsf	11,5	;volatile
   320                           
   321                           ;PreMidPrac.c: 106: GIE = 1;
   322  0036  178B               	bsf	11,7	;volatile
   323                           
   324                           ;PreMidPrac.c: 108: instCtrl(0xC8);
   325  0037  30C8               	movlw	200
   326  0038  120A  118A  2247  120A  118A  	fcall	_instCtrl
   327                           
   328                           ;PreMidPrac.c: 109: dataCtrl('0');
   329  003D  3030               	movlw	48
   330  003E  120A  118A  225A  120A  118A  	fcall	_dataCtrl
   331  0043                     L1:	
   332                           
   333                           ;PreMidPrac.c: 110: instCtrl(0xC9);
   334  0043  30C9               	movlw	201
   335  0044  120A  118A  2247  120A  118A  	fcall	_instCtrl
   336                           
   337                           ;PreMidPrac.c: 111: dataCtrl('0');
   338  0049  3030               	movlw	48
   339  004A                     L2:	
   340  004A  120A  118A  225A  120A  118A  	fcall	_dataCtrl
   341  004F                     l1045:	
   342                           ;PreMidPrac.c: 114: while(1){
   343                           
   344                           
   345                           ;PreMidPrac.c: 115: if(myINTF == 0){
   346  004F  1C79               	btfss	_myINTF/(0+8),_myINTF& (0+7)
   347  0050                     l68:	
   348                           ;PreMidPrac.c: 116: while(myINTF != 1){}
   349                           
   350  0050  1C79               	btfss	_myINTF/(0+8),_myINTF& (0+7)
   351  0051  2850               	goto	l68
   352                           
   353                           ;PreMidPrac.c: 117: }
   354                           ;PreMidPrac.c: 119: if(RB0){
   355  0052  1283               	bcf	3,5	;RP0=0, select bank0
   356  0053  1303               	bcf	3,6	;RP1=0, select bank0
   357  0054  1C06               	btfss	6,0	;volatile
   358  0055  28CE               	goto	l71
   359                           
   360                           ;PreMidPrac.c: 120: DATA = PORTD & 0x0F;
   361  0056  0808               	movf	8,w	;volatile
   362  0057  390F               	andlw	15
   363  0058  00A4               	movwf	??_main
   364  0059  0824               	movf	??_main,w
   365  005A  00A7               	movwf	main@DATA
   366                           
   367                           ;PreMidPrac.c: 121: if(DATA == 0x0C | DATA == 0x0E){
   368  005B  0827               	movf	main@DATA,w
   369  005C  3A0C               	xorlw	12
   370  005D  1903               	skipnz
   371  005E  2863               	goto	l1055
   372  005F  0827               	movf	main@DATA,w
   373  0060  3A0E               	xorlw	14
   374  0061  1D03               	skipz
   375  0062  2868               	goto	l1057
   376  0063                     l1055:	
   377                           
   378                           ;PreMidPrac.c: 122: STORE = DATA;
   379  0063  0827               	movf	main@DATA,w
   380  0064  00A4               	movwf	??_main
   381  0065  0824               	movf	??_main,w
   382  0066  00A6               	movwf	main@STORE
   383                           
   384                           ;PreMidPrac.c: 123: }
   385  0067  28CE               	goto	l71
   386  0068                     l1057:	
   387                           
   388                           ;PreMidPrac.c: 124: else{
   389                           ;PreMidPrac.c: 125: speed = PORTD & 0x0F;
   390  0068  0808               	movf	8,w	;volatile
   391  0069  390F               	andlw	15
   392  006A  00A4               	movwf	??_main
   393  006B  0824               	movf	??_main,w
   394  006C  00AB               	movwf	main@speed
   395  006D                     l76:	
   396                           ;PreMidPrac.c: 126: while(RB0){}
   397                           
   398  006D  1806               	btfsc	6,0	;volatile
   399  006E  286D               	goto	l76
   400                           
   401                           ;PreMidPrac.c: 127: if(speed == 0x00){fspeed = 12;}
   402  006F  08AB               	movf	main@speed,f
   403  0070  1D03               	skipz
   404  0071  2876               	goto	l79
   405  0072  300C               	movlw	12
   406  0073  00A4               	movwf	??_main
   407  0074  0824               	movf	??_main,w
   408  0075  00AA               	movwf	main@fspeed
   409  0076                     l79:	
   410                           
   411                           ;PreMidPrac.c: 128: if(speed == 0x01){fspeed = 24;}
   412  0076  082B               	movf	main@speed,w
   413  0077  3A01               	xorlw	1
   414  0078  1D03               	skipz
   415  0079  287E               	goto	l80
   416  007A  3018               	movlw	24
   417  007B  00A4               	movwf	??_main
   418  007C  0824               	movf	??_main,w
   419  007D  00AA               	movwf	main@fspeed
   420  007E                     l80:	
   421                           
   422                           ;PreMidPrac.c: 129: if(speed == 0x02){fspeed = 37;}
   423  007E  082B               	movf	main@speed,w
   424  007F  3A02               	xorlw	2
   425  0080  1D03               	skipz
   426  0081  2886               	goto	l81
   427  0082  3025               	movlw	37
   428  0083  00A4               	movwf	??_main
   429  0084  0824               	movf	??_main,w
   430  0085  00AA               	movwf	main@fspeed
   431  0086                     l81:	
   432                           
   433                           ;PreMidPrac.c: 130: if(speed == 0x04){fspeed = 49;}
   434  0086  082B               	movf	main@speed,w
   435  0087  3A04               	xorlw	4
   436  0088  1D03               	skipz
   437  0089  288E               	goto	l82
   438  008A  3031               	movlw	49
   439  008B  00A4               	movwf	??_main
   440  008C  0824               	movf	??_main,w
   441  008D  00AA               	movwf	main@fspeed
   442  008E                     l82:	
   443                           
   444                           ;PreMidPrac.c: 131: if(speed == 0x05){fspeed = 61;}
   445  008E  082B               	movf	main@speed,w
   446  008F  3A05               	xorlw	5
   447  0090  1D03               	skipz
   448  0091  2896               	goto	l83
   449  0092  303D               	movlw	61
   450  0093  00A4               	movwf	??_main
   451  0094  0824               	movf	??_main,w
   452  0095  00AA               	movwf	main@fspeed
   453  0096                     l83:	
   454                           
   455                           ;PreMidPrac.c: 132: if(speed == 0x06){fspeed = 73;}
   456  0096  082B               	movf	main@speed,w
   457  0097  3A06               	xorlw	6
   458  0098  1D03               	skipz
   459  0099  289E               	goto	l84
   460  009A  3049               	movlw	73
   461  009B  00A4               	movwf	??_main
   462  009C  0824               	movf	??_main,w
   463  009D  00AA               	movwf	main@fspeed
   464  009E                     l84:	
   465                           
   466                           ;PreMidPrac.c: 133: if(speed == 0x08){fspeed = 85;}
   467  009E  082B               	movf	main@speed,w
   468  009F  3A08               	xorlw	8
   469  00A0  1D03               	skipz
   470  00A1  28A6               	goto	l85
   471  00A2  3055               	movlw	85
   472  00A3  00A4               	movwf	??_main
   473  00A4  0824               	movf	??_main,w
   474  00A5  00AA               	movwf	main@fspeed
   475  00A6                     l85:	
   476                           
   477                           ;PreMidPrac.c: 134: if(speed == 0x09){fspeed = 98;}
   478  00A6  082B               	movf	main@speed,w
   479  00A7  3A09               	xorlw	9
   480  00A8  1D03               	skipz
   481  00A9  28AE               	goto	l86
   482  00AA  3062               	movlw	98
   483  00AB  00A4               	movwf	??_main
   484  00AC  0824               	movf	??_main,w
   485  00AD  00AA               	movwf	main@fspeed
   486  00AE                     l86:	
   487                           
   488                           ;PreMidPrac.c: 135: if(speed == 0x0A){fspeed = 110;}
   489  00AE  082B               	movf	main@speed,w
   490  00AF  3A0A               	xorlw	10
   491  00B0  1D03               	skipz
   492  00B1  28B6               	goto	l87
   493  00B2  306E               	movlw	110
   494  00B3  00A4               	movwf	??_main
   495  00B4  0824               	movf	??_main,w
   496  00B5  00AA               	movwf	main@fspeed
   497  00B6                     l87:	
   498                           
   499                           ;PreMidPrac.c: 136: if(speed == 0x0C){fspeed = 122;}
   500  00B6  082B               	movf	main@speed,w
   501  00B7  3A0C               	xorlw	12
   502  00B8  1D03               	skipz
   503  00B9  28BE               	goto	l88
   504  00BA  307A               	movlw	122
   505  00BB  00A4               	movwf	??_main
   506  00BC  0824               	movf	??_main,w
   507  00BD  00AA               	movwf	main@fspeed
   508  00BE                     l88:	
   509                           
   510                           ;PreMidPrac.c: 137: if(speed == 0x0D){fspeed = 122;}
   511  00BE  082B               	movf	main@speed,w
   512  00BF  3A0D               	xorlw	13
   513  00C0  1D03               	skipz
   514  00C1  28C6               	goto	l89
   515  00C2  307A               	movlw	122
   516  00C3  00A4               	movwf	??_main
   517  00C4  0824               	movf	??_main,w
   518  00C5  00AA               	movwf	main@fspeed
   519  00C6                     l89:	
   520                           
   521                           ;PreMidPrac.c: 138: if(speed == 0x0E){fspeed = 122;}
   522  00C6  082B               	movf	main@speed,w
   523  00C7  3A0E               	xorlw	14
   524  00C8  1D03               	skipz
   525  00C9  28CE               	goto	l71
   526  00CA  307A               	movlw	122
   527  00CB  00A4               	movwf	??_main
   528  00CC  0824               	movf	??_main,w
   529  00CD  00AA               	movwf	main@fspeed
   530  00CE                     l71:	
   531                           
   532                           ;PreMidPrac.c: 139: }
   533                           ;PreMidPrac.c: 141: }
   534                           ;PreMidPrac.c: 143: if(STORE == 0x0C){
   535  00CE  0826               	movf	main@STORE,w
   536  00CF  3A0C               	xorlw	12
   537  00D0  1D03               	skipz
   538  00D1  2942               	goto	l1123
   539                           
   540                           ;PreMidPrac.c: 144: if(MSB == 0x0A && LSB == 0x00){
   541  00D2  0828               	movf	main@MSB,w
   542  00D3  3A0A               	xorlw	10
   543  00D4  1D03               	skipz
   544  00D5  2902               	goto	l1099
   545  00D6  08A9               	movf	main@LSB,f
   546  00D7  1D03               	skipz
   547  00D8  2902               	goto	l1099
   548                           
   549                           ;PreMidPrac.c: 145: instCtrl(0xC8);
   550  00D9  30C8               	movlw	200
   551  00DA  120A  118A  2247  120A  118A  	fcall	_instCtrl
   552                           
   553                           ;PreMidPrac.c: 146: dataCtrl('0');
   554  00DF  3030               	movlw	48
   555  00E0  120A  118A  225A  120A  118A  	fcall	_dataCtrl
   556                           
   557                           ;PreMidPrac.c: 147: instCtrl(0xC9);
   558  00E5  30C9               	movlw	201
   559  00E6  120A  118A  2247  120A  118A  	fcall	_instCtrl
   560                           
   561                           ;PreMidPrac.c: 148: dataCtrl('0');
   562  00EB  3030               	movlw	48
   563  00EC  120A  118A  225A  120A  118A  	fcall	_dataCtrl
   564                           
   565                           ;PreMidPrac.c: 149: LSB = 0x00;
   566  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   567  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   568  00F3  01A9               	clrf	main@LSB
   569                           
   570                           ;PreMidPrac.c: 150: MSB = 0x00;
   571  00F4  01A8               	clrf	main@MSB
   572                           
   573                           ;PreMidPrac.c: 151: delay(fspeed);
   574  00F5  082A               	movf	main@fspeed,w
   575  00F6  00A4               	movwf	??_main
   576  00F7  01A5               	clrf	??_main+1
   577  00F8  0824               	movf	??_main,w
   578  00F9  00F4               	movwf	delay@count
   579  00FA  0825               	movf	??_main+1,w
   580  00FB  00F5               	movwf	delay@count+1
   581  00FC  120A  118A  2219  120A  118A  	fcall	_delay
   582                           
   583                           ;PreMidPrac.c: 152: }
   584  0101  284F               	goto	l1045
   585  0102                     l1099:	
   586                           
   587                           ;PreMidPrac.c: 153: else if(LSB == 0x09){
   588  0102  1283               	bcf	3,5	;RP0=0, select bank0
   589  0103  1303               	bcf	3,6	;RP1=0, select bank0
   590  0104  0829               	movf	main@LSB,w
   591  0105  3A09               	xorlw	9
   592  0106  1D03               	skipz
   593  0107  292D               	goto	l1115
   594                           
   595                           ;PreMidPrac.c: 154: delay(fspeed);
   596  0108  082A               	movf	main@fspeed,w
   597  0109  00A4               	movwf	??_main
   598  010A  01A5               	clrf	??_main+1
   599  010B  0824               	movf	??_main,w
   600  010C  00F4               	movwf	delay@count
   601  010D  0825               	movf	??_main+1,w
   602  010E  00F5               	movwf	delay@count+1
   603  010F  120A  118A  2219  120A  118A  	fcall	_delay
   604                           
   605                           ;PreMidPrac.c: 155: MSB++;
   606  0114  3001               	movlw	1
   607  0115  1283               	bcf	3,5	;RP0=0, select bank0
   608  0116  1303               	bcf	3,6	;RP1=0, select bank0
   609  0117  00A4               	movwf	??_main
   610  0118  0824               	movf	??_main,w
   611  0119  07A8               	addwf	main@MSB,f
   612                           
   613                           ;PreMidPrac.c: 156: instCtrl(0xC8);
   614  011A  30C8               	movlw	200
   615  011B  120A  118A  2247  120A  118A  	fcall	_instCtrl
   616                           
   617                           ;PreMidPrac.c: 157: dataCtrl(MSB + '0');
   618  0120  1283               	bcf	3,5	;RP0=0, select bank0
   619  0121  1303               	bcf	3,6	;RP1=0, select bank0
   620  0122  0828               	movf	main@MSB,w
   621  0123  3E30               	addlw	48
   622  0124  120A  118A  225A  120A  118A  	fcall	_dataCtrl
   623                           
   624                           ;PreMidPrac.c: 158: LSB = 0x00;
   625  0129  1283               	bcf	3,5	;RP0=0, select bank0
   626  012A  1303               	bcf	3,6	;RP1=0, select bank0
   627  012B  01A9               	clrf	main@LSB
   628  012C  2843               	goto	L1
   629  012D                     l1115:	
   630                           ;PreMidPrac.c: 161: }
   631                           
   632                           ;PreMidPrac.c: 160: dataCtrl('0');
   633                           
   634                           ;PreMidPrac.c: 159: instCtrl(0x0C9);
   635                           
   636                           
   637                           ;PreMidPrac.c: 162: else {
   638                           ;PreMidPrac.c: 163: delay(fspeed);
   639  012D  1283               	bcf	3,5	;RP0=0, select bank0
   640  012E  1303               	bcf	3,6	;RP1=0, select bank0
   641  012F  082A               	movf	main@fspeed,w
   642  0130  00A4               	movwf	??_main
   643  0131  01A5               	clrf	??_main+1
   644  0132  0824               	movf	??_main,w
   645  0133  00F4               	movwf	delay@count
   646  0134  0825               	movf	??_main+1,w
   647  0135  00F5               	movwf	delay@count+1
   648  0136  120A  118A  2219  120A  118A  	fcall	_delay
   649                           
   650                           ;PreMidPrac.c: 164: LSB++;
   651  013B  3001               	movlw	1
   652  013C  1283               	bcf	3,5	;RP0=0, select bank0
   653  013D  1303               	bcf	3,6	;RP1=0, select bank0
   654  013E  00A4               	movwf	??_main
   655  013F  0824               	movf	??_main,w
   656  0140  07A9               	addwf	main@LSB,f
   657  0141  29B3               	goto	L4
   658  0142                     l1123:	
   659                           ;PreMidPrac.c: 167: }
   660                           ;PreMidPrac.c: 169: }
   661                           
   662                           ;PreMidPrac.c: 166: dataCtrl(LSB + '0');
   663                           
   664                           ;PreMidPrac.c: 165: instCtrl(0xC9);
   665                           
   666                           
   667                           ;PreMidPrac.c: 170: else if(STORE == 0x0E){
   668  0142  1283               	bcf	3,5	;RP0=0, select bank0
   669  0143  1303               	bcf	3,6	;RP1=0, select bank0
   670  0144  0826               	movf	main@STORE,w
   671  0145  3A0E               	xorlw	14
   672  0146  1D03               	skipz
   673  0147  284F               	goto	l1045
   674                           
   675                           ;PreMidPrac.c: 171: if(MSB == 0x00 && LSB == 0x00){
   676  0148  08A8               	movf	main@MSB,f
   677  0149  1D03               	skipz
   678  014A  297D               	goto	l1139
   679  014B  08A9               	movf	main@LSB,f
   680  014C  1D03               	skipz
   681  014D  297D               	goto	l1139
   682                           
   683                           ;PreMidPrac.c: 172: instCtrl(0xC8);
   684  014E  30C8               	movlw	200
   685  014F  120A  118A  2247  120A  118A  	fcall	_instCtrl
   686                           
   687                           ;PreMidPrac.c: 173: dataCtrl('9');
   688  0154  3039               	movlw	57
   689  0155  120A  118A  225A  120A  118A  	fcall	_dataCtrl
   690                           
   691                           ;PreMidPrac.c: 174: instCtrl(0xC9);
   692  015A  30C9               	movlw	201
   693  015B  120A  118A  2247  120A  118A  	fcall	_instCtrl
   694                           
   695                           ;PreMidPrac.c: 175: dataCtrl('9');
   696  0160  3039               	movlw	57
   697  0161  120A  118A  225A  120A  118A  	fcall	_dataCtrl
   698                           
   699                           ;PreMidPrac.c: 176: LSB = 0x09;
   700  0166  3009               	movlw	9
   701  0167  1283               	bcf	3,5	;RP0=0, select bank0
   702  0168  1303               	bcf	3,6	;RP1=0, select bank0
   703  0169  00A4               	movwf	??_main
   704  016A  0824               	movf	??_main,w
   705  016B  00A9               	movwf	main@LSB
   706                           
   707                           ;PreMidPrac.c: 177: MSB = 0x09;
   708  016C  3009               	movlw	9
   709  016D  00A4               	movwf	??_main
   710  016E  0824               	movf	??_main,w
   711  016F  00A8               	movwf	main@MSB
   712                           
   713                           ;PreMidPrac.c: 178: delay(fspeed);
   714  0170  082A               	movf	main@fspeed,w
   715  0171  00A4               	movwf	??_main
   716  0172  01A5               	clrf	??_main+1
   717  0173  0824               	movf	??_main,w
   718  0174  00F4               	movwf	delay@count
   719  0175  0825               	movf	??_main+1,w
   720  0176  00F5               	movwf	delay@count+1
   721  0177  120A  118A  2219  120A  118A  	fcall	_delay
   722                           
   723                           ;PreMidPrac.c: 179: }
   724  017C  284F               	goto	l1045
   725  017D                     l1139:	
   726                           
   727                           ;PreMidPrac.c: 180: else if(LSB == 0x00){
   728  017D  1283               	bcf	3,5	;RP0=0, select bank0
   729  017E  1303               	bcf	3,6	;RP1=0, select bank0
   730  017F  08A9               	movf	main@LSB,f
   731  0180  1D03               	skipz
   732  0181  29A1               	goto	l1153
   733                           
   734                           ;PreMidPrac.c: 181: MSB--;
   735  0182  3001               	movlw	1
   736  0183  02A8               	subwf	main@MSB,f
   737                           
   738                           ;PreMidPrac.c: 182: instCtrl(0xC8);
   739  0184  30C8               	movlw	200
   740  0185  120A  118A  2247  120A  118A  	fcall	_instCtrl
   741                           
   742                           ;PreMidPrac.c: 183: dataCtrl(MSB + '0');
   743  018A  1283               	bcf	3,5	;RP0=0, select bank0
   744  018B  1303               	bcf	3,6	;RP1=0, select bank0
   745  018C  0828               	movf	main@MSB,w
   746  018D  3E30               	addlw	48
   747  018E  120A  118A  225A  120A  118A  	fcall	_dataCtrl
   748                           
   749                           ;PreMidPrac.c: 184: LSB = 0x09;
   750  0193  3009               	movlw	9
   751  0194  1283               	bcf	3,5	;RP0=0, select bank0
   752  0195  1303               	bcf	3,6	;RP1=0, select bank0
   753  0196  00A4               	movwf	??_main
   754  0197  0824               	movf	??_main,w
   755  0198  00A9               	movwf	main@LSB
   756                           
   757                           ;PreMidPrac.c: 185: instCtrl(0x0C9);
   758  0199  30C9               	movlw	201
   759  019A  120A  118A  2247  120A  118A  	fcall	_instCtrl
   760                           
   761                           ;PreMidPrac.c: 186: dataCtrl('9');
   762  019F  3039               	movlw	57
   763  01A0  284A               	goto	L2
   764  01A1                     l1153:	
   765                           ;PreMidPrac.c: 187: } else {
   766                           
   767                           
   768                           ;PreMidPrac.c: 188: delay(fspeed);
   769  01A1  1283               	bcf	3,5	;RP0=0, select bank0
   770  01A2  1303               	bcf	3,6	;RP1=0, select bank0
   771  01A3  082A               	movf	main@fspeed,w
   772  01A4  00A4               	movwf	??_main
   773  01A5  01A5               	clrf	??_main+1
   774  01A6  0824               	movf	??_main,w
   775  01A7  00F4               	movwf	delay@count
   776  01A8  0825               	movf	??_main+1,w
   777  01A9  00F5               	movwf	delay@count+1
   778  01AA  120A  118A  2219  120A  118A  	fcall	_delay
   779                           
   780                           ;PreMidPrac.c: 189: LSB--;
   781  01AF  3001               	movlw	1
   782  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   783  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   784  01B2  02A9               	subwf	main@LSB,f
   785  01B3                     L4:	
   786                           
   787                           ;PreMidPrac.c: 190: instCtrl(0xC9);
   788  01B3  30C9               	movlw	201
   789  01B4  120A  118A  2247  120A  118A  	fcall	_instCtrl
   790                           
   791                           ;PreMidPrac.c: 191: dataCtrl(LSB + '0');
   792  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   793  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   794  01BB  0829               	movf	main@LSB,w
   795  01BC  3E30               	addlw	48
   796  01BD  284A               	goto	L2
   797  01BE                     __end_of_main:	
   798                           
   799                           	psect	text1
   800  01F3                     __ptext1:	
   801 ;; *************** function _initLCD *****************
   802 ;; Defined at:
   803 ;;		line 62 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PreMid\PreMidPrac.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  2   59[COMMON] int 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0
   820 ;;      Totals:         0       0       0       0       0
   821 ;;Total ram usage:        0 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    3
   824 ;; This function calls:
   825 ;;		_delay1
   826 ;;		_instCtrl
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _initLCD
   834  01F3                     _initLCD:	
   835                           
   836                           ;PreMidPrac.c: 64: delay1(1);
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   840  01F3  3001               	movlw	1
   841  01F4  00F4               	movwf	delay1@MUL
   842  01F5  3000               	movlw	0
   843  01F6  00F5               	movwf	delay1@MUL+1
   844  01F7  120A  118A  21BE  120A  118A  	fcall	_delay1
   845                           
   846                           ;PreMidPrac.c: 65: instCtrl(0x38);
   847  01FC  3038               	movlw	56
   848  01FD  120A  118A  2247  120A  118A  	fcall	_instCtrl
   849                           
   850                           ;PreMidPrac.c: 66: instCtrl(0x08);
   851  0202  3008               	movlw	8
   852  0203  120A  118A  2247  120A  118A  	fcall	_instCtrl
   853                           
   854                           ;PreMidPrac.c: 67: instCtrl(0x01);
   855  0208  3001               	movlw	1
   856  0209  120A  118A  2247  120A  118A  	fcall	_instCtrl
   857                           
   858                           ;PreMidPrac.c: 68: instCtrl(0x06);
   859  020E  3006               	movlw	6
   860  020F  120A  118A  2247  120A  118A  	fcall	_instCtrl
   861                           
   862                           ;PreMidPrac.c: 69: instCtrl(0x0F);
   863  0214  300F               	movlw	15
   864  0215  120A  118A  2247   	fcall	_instCtrl
   865  0218  0008               	return
   866  0219                     __end_of_initLCD:	
   867                           
   868                           	psect	text2
   869  0247                     __ptext2:	
   870 ;; *************** function _instCtrl *****************
   871 ;; Defined at:
   872 ;;		line 51 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PreMid\PreMidPrac.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  INST            1    wreg     unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  INST            1    6[COMMON] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;		None               void
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         1       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         1       0       0       0       0
   890 ;;Total ram usage:        1 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    2
   893 ;; This function calls:
   894 ;;		_delay1
   895 ;; This function is called by:
   896 ;;		_initLCD
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           
   902                           ;psect for function _instCtrl
   903  0247                     _instCtrl:	
   904                           
   905                           ;incstack = 0
   906                           ; Regs used in _instCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   907                           ;instCtrl@INST stored from wreg
   908  0247  00F6               	movwf	instCtrl@INST
   909                           
   910                           ;PreMidPrac.c: 53: PORTC = INST;
   911  0248  0876               	movf	instCtrl@INST,w
   912  0249  1283               	bcf	3,5	;RP0=0, select bank0
   913  024A  1303               	bcf	3,6	;RP1=0, select bank0
   914  024B  0087               	movwf	7	;volatile
   915                           
   916                           ;PreMidPrac.c: 54: RB5 = 0;
   917  024C  1286               	bcf	6,5	;volatile
   918                           
   919                           ;PreMidPrac.c: 55: RB6 = 0;
   920  024D  1306               	bcf	6,6	;volatile
   921                           
   922                           ;PreMidPrac.c: 56: RB7 = 1;
   923  024E  1786               	bsf	6,7	;volatile
   924                           
   925                           ;PreMidPrac.c: 57: delay1(1);
   926  024F  3001               	movlw	1
   927  0250  00F4               	movwf	delay1@MUL
   928  0251  3000               	movlw	0
   929  0252  00F5               	movwf	delay1@MUL+1
   930  0253  120A  118A  21BE   	fcall	_delay1
   931                           
   932                           ;PreMidPrac.c: 58: RB7 = 0;
   933  0256  1283               	bcf	3,5	;RP0=0, select bank0
   934  0257  1303               	bcf	3,6	;RP1=0, select bank0
   935  0258  1386               	bcf	6,7	;volatile
   936  0259  0008               	return
   937  025A                     __end_of_instCtrl:	
   938                           
   939                           	psect	text3
   940  01BE                     __ptext3:	
   941 ;; *************** function _delay1 *****************
   942 ;; Defined at:
   943 ;;		line 41 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PreMid\PreMidPrac.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  MUL             2    4[COMMON] int 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  j               2    2[BANK0 ] int 
   948 ;;  i               2    0[BANK0 ] int 
   949 ;; Return value:  Size  Location     Type
   950 ;;		None               void
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, btemp+1
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         2       0       0       0       0
   959 ;;      Locals:         0       4       0       0       0
   960 ;;      Temps:          0       0       0       0       0
   961 ;;      Totals:         2       4       0       0       0
   962 ;;Total ram usage:        6 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_instCtrl
   969 ;;		_initLCD
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _delay1
   975  01BE                     _delay1:	
   976                           
   977                           ;PreMidPrac.c: 43: int i,j;
   978                           ;PreMidPrac.c: 44: for (i=MUL; i != 0; i--)
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _delay1: [wreg+status,2+status,0+btemp+1]
   982  01BE  0875               	movf	delay1@MUL+1,w
   983  01BF  1283               	bcf	3,5	;RP0=0, select bank0
   984  01C0  1303               	bcf	3,6	;RP1=0, select bank0
   985  01C1  01A1               	clrf	delay1@i+1
   986  01C2  07A1               	addwf	delay1@i+1,f
   987  01C3  0874               	movf	delay1@MUL,w
   988  01C4  01A0               	clrf	delay1@i
   989  01C5  07A0               	addwf	delay1@i,f
   990  01C6                     L5:	
   991  01C6  0821               	movf	delay1@i+1,w
   992  01C7  0420               	iorwf	delay1@i,w
   993  01C8  1903               	btfsc	3,2
   994  01C9  0008               	return
   995                           
   996                           ;PreMidPrac.c: 45: {
   997                           ;PreMidPrac.c: 46: for (j=0; j < 256; j++){}
   998  01CA  01A2               	clrf	delay1@j
   999  01CB  01A3               	clrf	delay1@j+1
  1000  01CC  0823               	movf	delay1@j+1,w
  1001  01CD  3A80               	xorlw	128
  1002  01CE  00FF               	movwf	127
  1003  01CF  3081               	movlw	129
  1004  01D0  027F               	subwf	127,w
  1005  01D1  1D03               	skipz
  1006  01D2  29D5               	goto	u685
  1007  01D3  3000               	movlw	0
  1008  01D4  0222               	subwf	delay1@j,w
  1009  01D5                     u685:	
  1010  01D5  1803               	btfsc	3,0
  1011  01D6  29EA               	goto	l979
  1012  01D7                     l975:	
  1013  01D7  3001               	movlw	1
  1014  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1015  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1016  01DA  07A2               	addwf	delay1@j,f
  1017  01DB  1803               	skipnc
  1018  01DC  0AA3               	incf	delay1@j+1,f
  1019  01DD  3000               	movlw	0
  1020  01DE  07A3               	addwf	delay1@j+1,f
  1021  01DF  0823               	movf	delay1@j+1,w
  1022  01E0  3A80               	xorlw	128
  1023  01E1  00FF               	movwf	127
  1024  01E2  3081               	movlw	129
  1025  01E3  027F               	subwf	127,w
  1026  01E4  1D03               	skipz
  1027  01E5  29E8               	goto	u695
  1028  01E6  3000               	movlw	0
  1029  01E7  0222               	subwf	delay1@j,w
  1030  01E8                     u695:	
  1031  01E8  1C03               	skipc
  1032  01E9  29D7               	goto	l975
  1033  01EA                     l979:	
  1034  01EA  30FF               	movlw	255
  1035  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1036  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1037  01ED  07A0               	addwf	delay1@i,f
  1038  01EE  1803               	skipnc
  1039  01EF  0AA1               	incf	delay1@i+1,f
  1040  01F0  30FF               	movlw	255
  1041  01F1  07A1               	addwf	delay1@i+1,f
  1042  01F2  29C6               	goto	L5
  1043  01F3                     __end_of_delay1:	
  1044                           
  1045                           	psect	text4
  1046  025A                     __ptext4:	
  1047 ;; *************** function _dataCtrl *****************
  1048 ;; Defined at:
  1049 ;;		line 73 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PreMid\PreMidPrac.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  DATA            1    wreg     unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  DATA            1    0[BANK0 ] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;		None               void
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       1       0       0       0
  1065 ;;      Temps:          0       0       0       0       0
  1066 ;;      Totals:         0       1       0       0       0
  1067 ;;Total ram usage:        1 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    2
  1070 ;; This function calls:
  1071 ;;		_delay
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _dataCtrl
  1079  025A                     _dataCtrl:	
  1080                           
  1081                           ;incstack = 0
  1082                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+pclath+cstack]
  1083                           ;dataCtrl@DATA stored from wreg
  1084  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1085  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1086  025C  00A0               	movwf	dataCtrl@DATA
  1087                           
  1088                           ;PreMidPrac.c: 75: PORTC = DATA;
  1089  025D  0820               	movf	dataCtrl@DATA,w
  1090  025E  0087               	movwf	7	;volatile
  1091                           
  1092                           ;PreMidPrac.c: 76: RB5 = 1;
  1093  025F  1686               	bsf	6,5	;volatile
  1094                           
  1095                           ;PreMidPrac.c: 77: RB6 = 0;
  1096  0260  1306               	bcf	6,6	;volatile
  1097                           
  1098                           ;PreMidPrac.c: 78: RB7 = 1;
  1099  0261  1786               	bsf	6,7	;volatile
  1100                           
  1101                           ;PreMidPrac.c: 79: delay(1);
  1102  0262  3001               	movlw	1
  1103  0263  00F4               	movwf	delay@count
  1104  0264  3000               	movlw	0
  1105  0265  00F5               	movwf	delay@count+1
  1106  0266  120A  118A  2219   	fcall	_delay
  1107                           
  1108                           ;PreMidPrac.c: 80: RB7 = 0;
  1109  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1110  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1111  026B  1386               	bcf	6,7	;volatile
  1112  026C  0008               	return
  1113  026D                     __end_of_dataCtrl:	
  1114                           
  1115                           	psect	text5
  1116  0219                     __ptext5:	
  1117 ;; *************** function _delay *****************
  1118 ;; Defined at:
  1119 ;;		line 30 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PreMid\PreMidPrac.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  count           2    4[COMMON] int 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  of_count        2    7[COMMON] int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;		None               void
  1126 ;; Registers used:
  1127 ;;		wreg, status,2
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         2       0       0       0       0
  1134 ;;      Locals:         2       0       0       0       0
  1135 ;;      Temps:          1       0       0       0       0
  1136 ;;      Totals:         5       0       0       0       0
  1137 ;;Total ram usage:        5 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_dataCtrl
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _delay
  1150  0219                     _delay:	
  1151                           
  1152                           ;PreMidPrac.c: 31: int of_count = 0;
  1153                           
  1154                           ;incstack = 0
  1155                           ; Regs used in _delay: [wreg+status,2]
  1156  0219  01F7               	clrf	delay@of_count
  1157  021A  01F8               	clrf	delay@of_count+1
  1158  021B                     l43:	
  1159                           ;PreMidPrac.c: 33: while(of_count < count){
  1160                           
  1161  021B  0878               	movf	delay@of_count+1,w
  1162  021C  3A80               	xorlw	128
  1163  021D  00F6               	movwf	??_delay
  1164  021E  0875               	movf	delay@count+1,w
  1165  021F  3A80               	xorlw	128
  1166  0220  0276               	subwf	??_delay,w
  1167  0221  1D03               	skipz
  1168  0222  2A25               	goto	u725
  1169  0223  0874               	movf	delay@count,w
  1170  0224  0277               	subwf	delay@of_count,w
  1171  0225                     u725:	
  1172  0225  1803               	btfsc	3,0
  1173  0226  0008               	return
  1174                           
  1175                           ;PreMidPrac.c: 34: if(myTMR0IF == 1){
  1176  0227  1CF9               	btfss	_myTMR0IF/(0+8),_myTMR0IF& (0+7)
  1177  0228  2A1B               	goto	l43
  1178                           
  1179                           ;PreMidPrac.c: 35: of_count++;
  1180  0229  3001               	movlw	1
  1181  022A  07F7               	addwf	delay@of_count,f
  1182  022B  1803               	skipnc
  1183  022C  0AF8               	incf	delay@of_count+1,f
  1184  022D  3000               	movlw	0
  1185  022E  07F8               	addwf	delay@of_count+1,f
  1186                           
  1187                           ;PreMidPrac.c: 36: myTMR0IF = 0;
  1188  022F  10F9               	bcf	_myTMR0IF/(0+8),_myTMR0IF& (0+7)
  1189  0230  2A1B               	goto	l43
  1190  0231                     __end_of_delay:	
  1191                           
  1192                           	psect	text6
  1193  0231                     __ptext6:	
  1194 ;; *************** function _ISR *****************
  1195 ;; Defined at:
  1196 ;;		line 15 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PreMid\PreMidPrac.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;		None               void
  1203 ;; Registers used:
  1204 ;;		None
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0
  1212 ;;      Temps:          4       0       0       0       0
  1213 ;;      Totals:         4       0       0       0       0
  1214 ;;Total ram usage:        4 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		Interrupt level 1
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _ISR
  1225  0231                     _ISR:	
  1226                           
  1227                           ;PreMidPrac.c: 16: GIE = 0;
  1228  0231  138B               	bcf	11,7	;volatile
  1229                           
  1230                           ;PreMidPrac.c: 18: if(INTF == 1){
  1231  0232  1C8B               	btfss	11,1	;volatile
  1232  0233  2A37               	goto	i1l37
  1233                           
  1234                           ;PreMidPrac.c: 19: INTF = 0;
  1235  0234  108B               	bcf	11,1	;volatile
  1236                           
  1237                           ;PreMidPrac.c: 20: myINTF = 1;
  1238  0235  1479               	bsf	_myINTF/(0+8),_myINTF& (0+7)
  1239                           
  1240                           ;PreMidPrac.c: 21: }
  1241  0236  2A3B               	goto	i1l38
  1242  0237                     i1l37:	
  1243                           
  1244                           ;PreMidPrac.c: 22: else if(TMR0IF == 1){
  1245  0237  1D0B               	btfss	11,2	;volatile
  1246  0238  2A3B               	goto	i1l38
  1247                           
  1248                           ;PreMidPrac.c: 23: TMR0IF = 0;
  1249  0239  110B               	bcf	11,2	;volatile
  1250                           
  1251                           ;PreMidPrac.c: 24: myTMR0IF = 1;
  1252  023A  14F9               	bsf	_myTMR0IF/(0+8),_myTMR0IF& (0+7)
  1253  023B                     i1l38:	
  1254                           
  1255                           ;PreMidPrac.c: 25: }
  1256                           ;PreMidPrac.c: 27: GIE = 1;
  1257  023B  178B               	bsf	11,7	;volatile
  1258  023C  0873               	movf	??_ISR+3,w
  1259  023D  00FF               	movwf	127
  1260  023E  0872               	movf	??_ISR+2,w
  1261  023F  008A               	movwf	10
  1262  0240  0871               	movf	??_ISR+1,w
  1263  0241  0084               	movwf	4
  1264  0242  0E70               	swapf	??_ISR^(0+-128),w
  1265  0243  0083               	movwf	3
  1266  0244  0EFE               	swapf	126,f
  1267  0245  0E7E               	swapf	126,w
  1268  0246  0009               	retfie
  1269  0247                     __end_of_ISR:	
  1270  007E                     btemp	set	126	;btemp
  1271  007E                     wtemp	set	126
  1272  007E                     wtemp0	set	126
  1273  0080                     wtemp1	set	128
  1274  0082                     wtemp2	set	130
  1275  0084                     wtemp3	set	132
  1276  0086                     wtemp4	set	134
  1277  0088                     wtemp5	set	136
  1278  007F                     wtemp6	set	127
  1279  007E                     ttemp	set	126
  1280  007E                     ttemp0	set	126
  1281  0081                     ttemp1	set	129
  1282  0084                     ttemp2	set	132
  1283  0087                     ttemp3	set	135
  1284  007F                     ttemp4	set	127
  1285  007E                     ltemp	set	126
  1286  007E                     ltemp0	set	126
  1287  0082                     ltemp1	set	130
  1288  0086                     ltemp2	set	134
  1289  0080                     ltemp3	set	128
  1290                           
  1291                           	psect	intentry
  1292  0004                     __pintentry:	
  1293                           ;incstack = 0
  1294                           ; Regs used in _ISR: []
  1295                           
  1296  0004                     interrupt_function:	
  1297  007E                     saved_w	set	btemp
  1298  0004  00FE               	movwf	btemp
  1299  0005  0E03               	swapf	3,w
  1300  0006  00F0               	movwf	??_ISR
  1301  0007  0804               	movf	4,w
  1302  0008  00F1               	movwf	??_ISR+1
  1303  0009  080A               	movf	10,w
  1304  000A  00F2               	movwf	??_ISR+2
  1305  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1306  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1307  000D  087F               	movf	btemp+1,w
  1308  000E  00F3               	movwf	??_ISR+3
  1309  000F  120A  118A  2A31   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay
    _initLCD->_instCtrl
    _instCtrl->_delay1
    _dataCtrl->_delay

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _initLCD->_delay1
    _instCtrl->_delay1

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2976
                                              4 BANK0      8     8      0
                           _dataCtrl
                              _delay
                            _initLCD
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     625
                             _delay1
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             1     1      0     328
                                              6 COMMON     1     1      0
                             _delay1
 ---------------------------------------------------------------------------------
 (2) _delay1                                               6     4      2     297
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _dataCtrl                                             1     1      0     489
                                              0 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2     458
                                              4 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dataCtrl
     _delay
   _delay
   _initLCD
     _delay1
     _instCtrl
       _delay1
   _instCtrl
     _delay1

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Mar 09 22:58:34 2025

            __CFG_CP$OFF 0000                       l43 021B                       l71 00CE  
                     l80 007E                       l81 0086                       l82 008E  
                     l83 0096                       l84 009E                       l76 006D  
                     l68 0050                       l85 00A6                       l86 00AE  
                     l87 00B6                       l79 0076                       l88 00BE  
                     l89 00C6                      l975 01D7                      l979 01EA  
                    _GIE 005F                      _RB0 0030                      _RB5 0035  
                    _RB6 0036                      _RB7 0037             __CFG_CPD$OFF 0000  
                    _ISR 0231                      u725 0225                      u685 01D5  
                    u695 01E8                      fsr0 0004             __CFG_FOSC$XT 0000  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     l1115 012D  
                   l1123 0142                     l1045 004F                     l1055 0063  
                   l1153 01A1                     l1057 0068                     l1139 017D  
                   l1099 0102                     _INTE 005C                     _INTF 0059  
                   i1l37 0237                     i1l38 023B             __CFG_WRT$OFF 0000  
                   _main 001A                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0012                     ttemp 007E  
                   wtemp 007E                    ??_ISR 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
          __CFG_PWRTE$ON 0000          __end_of_initLCD 0219                    _delay 0219  
         __pbitbssCOMMON 03C8                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0015             __end_of_main 01BE  
                 ??_main 0024                   ?_delay 0074                   _TMR0IE 005D  
                 _TMR0IF 005A         __end_of_dataCtrl 026D                   _delay1 01BE  
                 _myINTF 03C8         __end_of_instCtrl 025A                ??_initLCD 0077  
                 saved_w 007E  __end_of__initialization 0016           __pcstackCOMMON 0070  
          __end_of_delay 0231                  ??_delay 0076               __pmaintext 001A  
                ?_delay1 0074               __pintentry 0004                ?_dataCtrl 0070  
              ?_instCtrl 0070          __size_of_delay1 0035                  __ptext0 0000  
                __ptext1 01F3                  __ptext2 0247                  __ptext3 01BE  
                __ptext4 025A                  __ptext5 0219                  __ptext6 0231  
          delay@of_count 0077                  _initLCD 01F3             __size_of_ISR 0016  
                delay1@i 0020                  delay1@j 0022               ??_dataCtrl 0079  
             delay@count 0074                  main@LSB 0029                  main@MSB 0028  
   end_of_initialization 0016               ??_instCtrl 0076             instCtrl@INST 0076  
             main@fspeed 002A           __end_of_delay1 01F3      start_initialization 0015  
            __end_of_ISR 0247             dataCtrl@DATA 0020                 ??_delay1 0076  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_dataCtrl 0013  
      __size_of_instCtrl 0013                 ?_initLCD 0070                delay1@MUL 0074  
         __size_of_delay 0018        interrupt_function 0004                main@STORE 0026  
              main@speed 002B                 _dataCtrl 025A         __size_of_initLCD 0026  
               _myTMR0IF 03C9            __size_of_main 01A4                 _instCtrl 0247  
               main@DATA 0027                 intlevel1 0000               _OPTION_REG 0081  
