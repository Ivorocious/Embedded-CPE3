

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 13 14:25:42 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0006                     _PORTB	set	6
    74  0008                     _PORTD	set	8
    75  0038                     _RC0	set	56
    76  0039                     _RC1	set	57
    77  003A                     _RC2	set	58
    78  0044                     _RD4	set	68
    79  0086                     _TRISB	set	134
    80  0087                     _TRISC	set	135
    81  0088                     _TRISD	set	136
    82                           
    83                           	psect	text0
    84  0000                     __ptext0:	
    85                           ; #config settings
    86                           
    87                           
    88                           ;psect for function _delay
    89  0000                     
    90                           	psect	cinit
    91  07FC                     start_initialization:	
    92  07FC                     __initialization:	
    93  07FC                     end_of_initialization:	
    94                           ;End of C runtime variable initialization code
    95                           
    96  07FC                     __end_of__initialization:	
    97  07FC  0183               	clrf	3
    98  07FD  120A  118A  2F77   	ljmp	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMMON
   101  0070                     __pcstackCOMMON:	
   102  0070                     ?_delay:	
   103  0070                     ?_instCtrl:	
   104                           ; 0 bytes @ 0x0
   105                           
   106  0070                     ?_dataCtrl:	
   107                           ; 0 bytes @ 0x0
   108                           
   109  0070                     ?_initLCD:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ?_main:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     delay@MUL:	
   116                           ; 0 bytes @ 0x0
   117                           
   118                           
   119                           ; 2 bytes @ 0x0
   120  0070                     	ds	2
   121  0072                     ??_delay:	
   122  0072                     delay@i:	
   123                           ; 0 bytes @ 0x2
   124                           
   125                           
   126                           ; 2 bytes @ 0x2
   127  0072                     	ds	2
   128  0074                     delay@j:	
   129                           
   130                           ; 2 bytes @ 0x4
   131  0074                     	ds	2
   132  0076                     ??_instCtrl:	
   133  0076                     ??_dataCtrl:	
   134                           ; 0 bytes @ 0x6
   135                           
   136  0076                     instCtrl@INST:	
   137                           ; 0 bytes @ 0x6
   138                           
   139  0076                     dataCtrl@DATA:	
   140                           ; 1 bytes @ 0x6
   141                           
   142                           
   143                           ; 1 bytes @ 0x6
   144  0076                     	ds	1
   145  0077                     ??_initLCD:	
   146  0077                     ??_main:	
   147                           ; 0 bytes @ 0x7
   148                           
   149                           
   150                           ; 0 bytes @ 0x7
   151  0077                     	ds	1
   152  0078                     main@charCount:	
   153                           
   154                           ; 2 bytes @ 0x8
   155  0078                     	ds	2
   156  007A                     main@DATA:	
   157                           
   158                           ; 1 bytes @ 0xA
   159  007A                     	ds	1
   160                           
   161                           	psect	maintext
   162  0777                     __pmaintext:	
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 54 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PA2\LE2-3\LE2-3.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;  charCount       2    8[COMMON] unsigned int 
   173 ;;  DATA            1   10[COMMON] unsigned char 
   174 ;; Return value:  Size  Location     Type
   175 ;;		None               void
   176 ;; Registers used:
   177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 17F/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   183 ;;      Params:         0       0       0       0       0
   184 ;;      Locals:         3       0       0       0       0
   185 ;;      Temps:          1       0       0       0       0
   186 ;;      Totals:         4       0       0       0       0
   187 ;;Total ram usage:        4 bytes
   188 ;; Hardware stack levels required when called:    3
   189 ;; This function calls:
   190 ;;		_dataCtrl
   191 ;;		_initLCD
   192 ;;		_instCtrl
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           
   199                           ;psect for function _main
   200  0777                     _main:	
   201                           
   202                           ;LE2-3.c: 55: unsigned char DATA;
   203                           ;LE2-3.c: 56: unsigned int charCount = 0;
   204                           
   205                           ;incstack = 0
   206                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   207  0777  01F8               	clrf	main@charCount
   208  0778  01F9               	clrf	main@charCount+1
   209                           
   210                           ;LE2-3.c: 58: TRISB = 0x00;
   211  0779  1683               	bsf	3,5	;RP0=1, select bank1
   212  077A  1303               	bcf	3,6	;RP1=0, select bank1
   213  077B  0186               	clrf	6	;volatile
   214                           
   215                           ;LE2-3.c: 59: TRISC = 0x00;
   216  077C  0187               	clrf	7	;volatile
   217                           
   218                           ;LE2-3.c: 60: TRISD = 0xFF;
   219  077D  30FF               	movlw	255
   220  077E  0088               	movwf	8	;volatile
   221                           
   222                           ;LE2-3.c: 61: initLCD();
   223  077F  120A  118A  2722  120A  118A  	fcall	_initLCD
   224                           
   225                           ;LE2-3.c: 63: instCtrl(0x80);
   226  0784  3080               	movlw	128
   227  0785  120A  118A  270F  120A  118A  	fcall	_instCtrl
   228  078A                     l579:	
   229                           ;LE2-3.c: 65: while (1) {
   230                           
   231                           
   232                           ;LE2-3.c: 66: if (RD4 == 1) {
   233  078A  1283               	bcf	3,5	;RP0=0, select bank0
   234  078B  1303               	bcf	3,6	;RP1=0, select bank0
   235  078C  1E08               	btfss	8,4	;volatile
   236  078D  2F8A               	goto	l579
   237                           
   238                           ;LE2-3.c: 67: DATA = PORTD & 0x0F;
   239  078E  0808               	movf	8,w	;volatile
   240  078F  390F               	andlw	15
   241  0790  00F7               	movwf	??_main
   242  0791  0877               	movf	??_main,w
   243  0792  00FA               	movwf	main@DATA
   244  0793                     l39:	
   245                           ;LE2-3.c: 68: while (RD4) {}
   246                           
   247  0793  1A08               	btfsc	8,4	;volatile
   248  0794  2F93               	goto	l39
   249                           
   250                           ;LE2-3.c: 70: if (DATA == 0x00) { dataCtrl('1'); }
   251  0795  08FA               	movf	main@DATA,f
   252  0796  1D03               	skipz
   253  0797  2F9A               	goto	l587
   254  0798  3031               	movlw	49
   255  0799  2FDB               	goto	L1
   256  079A                     l587:	
   257                           
   258                           ;LE2-3.c: 71: else if (DATA == 0x01) { dataCtrl('2'); }
   259  079A  087A               	movf	main@DATA,w
   260  079B  3A01               	xorlw	1
   261  079C  1D03               	skipz
   262  079D  2FA0               	goto	l591
   263  079E  3032               	movlw	50
   264  079F  2FDB               	goto	L1
   265  07A0                     l591:	
   266                           
   267                           ;LE2-3.c: 72: else if (DATA == 0x02) { dataCtrl('3'); }
   268  07A0  087A               	movf	main@DATA,w
   269  07A1  3A02               	xorlw	2
   270  07A2  1D03               	skipz
   271  07A3  2FA6               	goto	l595
   272  07A4  3033               	movlw	51
   273  07A5  2FDB               	goto	L1
   274  07A6                     l595:	
   275                           
   276                           ;LE2-3.c: 73: else if (DATA == 0x04) { dataCtrl('4'); }
   277  07A6  087A               	movf	main@DATA,w
   278  07A7  3A04               	xorlw	4
   279  07A8  1D03               	skipz
   280  07A9  2FAC               	goto	l599
   281  07AA  3034               	movlw	52
   282  07AB  2FDB               	goto	L1
   283  07AC                     l599:	
   284                           
   285                           ;LE2-3.c: 74: else if (DATA == 0x05) { dataCtrl('5'); }
   286  07AC  087A               	movf	main@DATA,w
   287  07AD  3A05               	xorlw	5
   288  07AE  1D03               	skipz
   289  07AF  2FB2               	goto	l603
   290  07B0  3035               	movlw	53
   291  07B1  2FDB               	goto	L1
   292  07B2                     l603:	
   293                           
   294                           ;LE2-3.c: 75: else if (DATA == 0x06) { dataCtrl('6'); }
   295  07B2  087A               	movf	main@DATA,w
   296  07B3  3A06               	xorlw	6
   297  07B4  1D03               	skipz
   298  07B5  2FB8               	goto	l607
   299  07B6  3036               	movlw	54
   300  07B7  2FDB               	goto	L1
   301  07B8                     l607:	
   302                           
   303                           ;LE2-3.c: 76: else if (DATA == 0x08) { dataCtrl('7'); }
   304  07B8  087A               	movf	main@DATA,w
   305  07B9  3A08               	xorlw	8
   306  07BA  1D03               	skipz
   307  07BB  2FBE               	goto	l611
   308  07BC  3037               	movlw	55
   309  07BD  2FDB               	goto	L1
   310  07BE                     l611:	
   311                           
   312                           ;LE2-3.c: 77: else if (DATA == 0x09) { dataCtrl('8'); }
   313  07BE  087A               	movf	main@DATA,w
   314  07BF  3A09               	xorlw	9
   315  07C0  1D03               	skipz
   316  07C1  2FC4               	goto	l615
   317  07C2  3038               	movlw	56
   318  07C3  2FDB               	goto	L1
   319  07C4                     l615:	
   320                           
   321                           ;LE2-3.c: 78: else if (DATA == 0x0A) { dataCtrl('9'); }
   322  07C4  087A               	movf	main@DATA,w
   323  07C5  3A0A               	xorlw	10
   324  07C6  1D03               	skipz
   325  07C7  2FCA               	goto	l619
   326  07C8  3039               	movlw	57
   327  07C9  2FDB               	goto	L1
   328  07CA                     l619:	
   329                           
   330                           ;LE2-3.c: 79: else if (DATA == 0x0C) { dataCtrl('*'); }
   331  07CA  087A               	movf	main@DATA,w
   332  07CB  3A0C               	xorlw	12
   333  07CC  1D03               	skipz
   334  07CD  2FD0               	goto	l623
   335  07CE  302A               	movlw	42
   336  07CF  2FDB               	goto	L1
   337  07D0                     l623:	
   338                           
   339                           ;LE2-3.c: 80: else if (DATA == 0x0D) { dataCtrl('0'); }
   340  07D0  087A               	movf	main@DATA,w
   341  07D1  3A0D               	xorlw	13
   342  07D2  1D03               	skipz
   343  07D3  2FD6               	goto	l627
   344  07D4  3030               	movlw	48
   345  07D5  2FDB               	goto	L1
   346  07D6                     l627:	
   347                           
   348                           ;LE2-3.c: 81: else if (DATA == 0x0E) { dataCtrl('#'); }
   349  07D6  087A               	movf	main@DATA,w
   350  07D7  3A0E               	xorlw	14
   351  07D8  1D03               	skipz
   352  07D9  2FE0               	goto	l631
   353  07DA  3023               	movlw	35
   354  07DB                     L1:	
   355  07DB  120A  118A  26FC  120A  118A  	fcall	_dataCtrl
   356  07E0                     l631:	
   357                           
   358                           ;LE2-3.c: 83: charCount++;
   359  07E0  3001               	movlw	1
   360  07E1  07F8               	addwf	main@charCount,f
   361  07E2  1803               	skipnc
   362  07E3  0AF9               	incf	main@charCount+1,f
   363  07E4  3000               	movlw	0
   364  07E5  07F9               	addwf	main@charCount+1,f
   365                           
   366                           ;LE2-3.c: 85: if (charCount >= 104) {
   367  07E6  3000               	movlw	0
   368  07E7  0279               	subwf	main@charCount+1,w
   369  07E8  3068               	movlw	104
   370  07E9  1903               	skipnz
   371  07EA  0278               	subwf	main@charCount,w
   372  07EB  1C03               	skipc
   373  07EC  2F8A               	goto	l579
   374                           
   375                           ;LE2-3.c: 86: instCtrl(0x01);
   376  07ED  3001               	movlw	1
   377  07EE  120A  118A  270F  120A  118A  	fcall	_instCtrl
   378                           
   379                           ;LE2-3.c: 87: instCtrl(0x80);
   380  07F3  3080               	movlw	128
   381  07F4  120A  118A  270F  120A  118A  	fcall	_instCtrl
   382                           
   383                           ;LE2-3.c: 88: charCount = 0;
   384  07F9  01F8               	clrf	main@charCount
   385  07FA  01F9               	clrf	main@charCount+1
   386  07FB  2F8A               	goto	l579
   387  07FC                     __end_of_main:	
   388                           
   389                           	psect	text1
   390  0722                     __ptext1:	
   391 ;; *************** function _initLCD *****************
   392 ;; Defined at:
   393 ;;		line 41 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PA2\LE2-3\LE2-3.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;		None               void
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used:    1
   413 ;; Hardware stack levels required when called:    2
   414 ;; This function calls:
   415 ;;		_delay
   416 ;;		_instCtrl
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _initLCD
   424  0722                     _initLCD:	
   425                           
   426                           ;LE2-3.c: 43: delay(1);
   427                           
   428                           ;incstack = 0
   429                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   430  0722  3001               	movlw	1
   431  0723  00F0               	movwf	delay@MUL
   432  0724  3000               	movlw	0
   433  0725  00F1               	movwf	delay@MUL+1
   434  0726  120A  118A  2748  120A  118A  	fcall	_delay
   435                           
   436                           ;LE2-3.c: 44: instCtrl(0x38);
   437  072B  3038               	movlw	56
   438  072C  120A  118A  270F  120A  118A  	fcall	_instCtrl
   439                           
   440                           ;LE2-3.c: 45: instCtrl(0x08);
   441  0731  3008               	movlw	8
   442  0732  120A  118A  270F  120A  118A  	fcall	_instCtrl
   443                           
   444                           ;LE2-3.c: 46: instCtrl(0x01);
   445  0737  3001               	movlw	1
   446  0738  120A  118A  270F  120A  118A  	fcall	_instCtrl
   447                           
   448                           ;LE2-3.c: 47: instCtrl(0x06);
   449  073D  3006               	movlw	6
   450  073E  120A  118A  270F  120A  118A  	fcall	_instCtrl
   451                           
   452                           ;LE2-3.c: 48: instCtrl(0x0E);
   453  0743  300E               	movlw	14
   454  0744  120A  118A  270F   	fcall	_instCtrl
   455  0747  0008               	return
   456  0748                     __end_of_initLCD:	
   457                           
   458                           	psect	text2
   459  070F                     __ptext2:	
   460 ;; *************** function _instCtrl *****************
   461 ;; Defined at:
   462 ;;		line 21 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PA2\LE2-3\LE2-3.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  INST            1    wreg     unsigned char 
   465 ;; Auto vars:     Size  Location     Type
   466 ;;  INST            1    6[COMMON] unsigned char 
   467 ;; Return value:  Size  Location     Type
   468 ;;		None               void
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         1       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         1       0       0       0       0
   480 ;;Total ram usage:        1 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; Hardware stack levels required when called:    1
   483 ;; This function calls:
   484 ;;		_delay
   485 ;; This function is called by:
   486 ;;		_initLCD
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _instCtrl
   493  070F                     _instCtrl:	
   494                           
   495                           ;incstack = 0
   496                           ; Regs used in _instCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   497                           ;instCtrl@INST stored from wreg
   498  070F  00F6               	movwf	instCtrl@INST
   499                           
   500                           ;LE2-3.c: 23: PORTB = INST;
   501  0710  0876               	movf	instCtrl@INST,w
   502  0711  1283               	bcf	3,5	;RP0=0, select bank0
   503  0712  1303               	bcf	3,6	;RP1=0, select bank0
   504  0713  0086               	movwf	6	;volatile
   505                           
   506                           ;LE2-3.c: 24: RC0 = 0;
   507  0714  1007               	bcf	7,0	;volatile
   508                           
   509                           ;LE2-3.c: 25: RC1 = 0;
   510  0715  1087               	bcf	7,1	;volatile
   511                           
   512                           ;LE2-3.c: 26: RC2 = 1;
   513  0716  1507               	bsf	7,2	;volatile
   514                           
   515                           ;LE2-3.c: 27: delay(1);
   516  0717  3001               	movlw	1
   517  0718  00F0               	movwf	delay@MUL
   518  0719  3000               	movlw	0
   519  071A  00F1               	movwf	delay@MUL+1
   520  071B  120A  118A  2748   	fcall	_delay
   521                           
   522                           ;LE2-3.c: 28: RC2 = 0;
   523  071E  1283               	bcf	3,5	;RP0=0, select bank0
   524  071F  1303               	bcf	3,6	;RP1=0, select bank0
   525  0720  1107               	bcf	7,2	;volatile
   526  0721  0008               	return
   527  0722                     __end_of_instCtrl:	
   528                           
   529                           	psect	text3
   530  06FC                     __ptext3:	
   531 ;; *************** function _dataCtrl *****************
   532 ;; Defined at:
   533 ;;		line 31 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PA2\LE2-3\LE2-3.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  DATA            1    wreg     unsigned char 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  DATA            1    6[COMMON] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;		None               void
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         1       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0
   550 ;;      Totals:         1       0       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    1
   554 ;; This function calls:
   555 ;;		_delay
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _dataCtrl
   563  06FC                     _dataCtrl:	
   564                           
   565                           ;incstack = 0
   566                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   567                           ;dataCtrl@DATA stored from wreg
   568  06FC  00F6               	movwf	dataCtrl@DATA
   569                           
   570                           ;LE2-3.c: 33: PORTB = DATA;
   571  06FD  0876               	movf	dataCtrl@DATA,w
   572  06FE  1283               	bcf	3,5	;RP0=0, select bank0
   573  06FF  1303               	bcf	3,6	;RP1=0, select bank0
   574  0700  0086               	movwf	6	;volatile
   575                           
   576                           ;LE2-3.c: 34: RC0 = 1;
   577  0701  1407               	bsf	7,0	;volatile
   578                           
   579                           ;LE2-3.c: 35: RC1 = 0;
   580  0702  1087               	bcf	7,1	;volatile
   581                           
   582                           ;LE2-3.c: 36: RC2 = 1;
   583  0703  1507               	bsf	7,2	;volatile
   584                           
   585                           ;LE2-3.c: 37: delay(1);
   586  0704  3001               	movlw	1
   587  0705  00F0               	movwf	delay@MUL
   588  0706  3000               	movlw	0
   589  0707  00F1               	movwf	delay@MUL+1
   590  0708  120A  118A  2748   	fcall	_delay
   591                           
   592                           ;LE2-3.c: 38: RC2 = 0;
   593  070B  1283               	bcf	3,5	;RP0=0, select bank0
   594  070C  1303               	bcf	3,6	;RP1=0, select bank0
   595  070D  1107               	bcf	7,2	;volatile
   596  070E  0008               	return
   597  070F                     __end_of_dataCtrl:	
   598                           
   599                           	psect	text4
   600  0748                     __ptext4:	
   601 ;; *************** function _delay *****************
   602 ;; Defined at:
   603 ;;		line 12 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PA2\LE2-3\LE2-3.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  MUL             2    0[COMMON] int 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  j               2    4[COMMON] int 
   608 ;;  i               2    2[COMMON] int 
   609 ;; Return value:  Size  Location     Type
   610 ;;		None               void
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, btemp+1
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         2       0       0       0       0
   619 ;;      Locals:         4       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         6       0       0       0       0
   622 ;;Total ram usage:        6 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_instCtrl
   628 ;;		_dataCtrl
   629 ;;		_initLCD
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           
   634                           ;psect for function _delay
   635  0748                     _delay:	
   636                           
   637                           ;LE2-3.c: 14: int i,j;
   638                           ;LE2-3.c: 15: for (i=MUL; i != 0; i--){
   639                           
   640                           ;incstack = 0
   641                           ; Regs used in _delay: [wreg+status,2+status,0+btemp+1]
   642  0748  0871               	movf	delay@MUL+1,w
   643  0749  01F3               	clrf	delay@i+1
   644  074A  07F3               	addwf	delay@i+1,f
   645  074B  0870               	movf	delay@MUL,w
   646  074C  01F2               	clrf	delay@i
   647  074D  07F2               	addwf	delay@i,f
   648  074E                     L2:	
   649  074E  0873               	movf	delay@i+1,w
   650  074F  0472               	iorwf	delay@i,w
   651  0750  1903               	btfsc	3,2
   652  0751  0008               	return
   653                           
   654                           ;LE2-3.c: 16: for (j=0; j < 256; j++){}
   655  0752  01F4               	clrf	delay@j
   656  0753  01F5               	clrf	delay@j+1
   657  0754  0875               	movf	delay@j+1,w
   658  0755  3A80               	xorlw	128
   659  0756  00FF               	movwf	127
   660  0757  3081               	movlw	129
   661  0758  027F               	subwf	127,w
   662  0759  1D03               	skipz
   663  075A  2F5D               	goto	u25
   664  075B  3000               	movlw	0
   665  075C  0274               	subwf	delay@j,w
   666  075D                     u25:	
   667  075D  1803               	btfsc	3,0
   668  075E  2F70               	goto	l541
   669  075F                     l537:	
   670  075F  3001               	movlw	1
   671  0760  07F4               	addwf	delay@j,f
   672  0761  1803               	skipnc
   673  0762  0AF5               	incf	delay@j+1,f
   674  0763  3000               	movlw	0
   675  0764  07F5               	addwf	delay@j+1,f
   676  0765  0875               	movf	delay@j+1,w
   677  0766  3A80               	xorlw	128
   678  0767  00FF               	movwf	127
   679  0768  3081               	movlw	129
   680  0769  027F               	subwf	127,w
   681  076A  1D03               	skipz
   682  076B  2F6E               	goto	u35
   683  076C  3000               	movlw	0
   684  076D  0274               	subwf	delay@j,w
   685  076E                     u35:	
   686  076E  1C03               	skipc
   687  076F  2F5F               	goto	l537
   688  0770                     l541:	
   689  0770  30FF               	movlw	255
   690  0771  07F2               	addwf	delay@i,f
   691  0772  1803               	skipnc
   692  0773  0AF3               	incf	delay@i+1,f
   693  0774  30FF               	movlw	255
   694  0775  07F3               	addwf	delay@i+1,f
   695  0776  2F4E               	goto	L2
   696  0777                     __end_of_delay:	
   697  007E                     btemp	set	126	;btemp
   698  007E                     wtemp	set	126
   699  007E                     wtemp0	set	126
   700  0080                     wtemp1	set	128
   701  0082                     wtemp2	set	130
   702  0084                     wtemp3	set	132
   703  0086                     wtemp4	set	134
   704  0088                     wtemp5	set	136
   705  007F                     wtemp6	set	127
   706  007E                     ttemp	set	126
   707  007E                     ttemp0	set	126
   708  0081                     ttemp1	set	129
   709  0084                     ttemp2	set	132
   710  0087                     ttemp3	set	135
   711  007F                     ttemp4	set	127
   712  007E                     ltemp	set	126
   713  007E                     ltemp0	set	126
   714  0082                     ltemp1	set	130
   715  0086                     ltemp2	set	134
   716  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_dataCtrl
    _main->_instCtrl
    _initLCD->_instCtrl
    _instCtrl->_delay
    _dataCtrl->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1056
                                              7 COMMON     4     4      0
                           _dataCtrl
                            _initLCD
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     423
                              _delay
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             1     1      0     219
                                              6 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _dataCtrl                                             1     1      0     219
                                              6 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2     204
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dataCtrl
     _delay
   _initLCD
     _delay
     _instCtrl
       _delay
   _instCtrl
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 13 14:25:42 2025

            __CFG_CP$OFF 0000                       l39 0793                       u25 075D  
                     u35 076E                      l611 07BE                      l603 07B2  
                    l541 0770                      l623 07D0                      l615 07C4  
                    l607 07B8                      l631 07E0                      l537 075F  
                    l627 07D6                      l619 07CA                      l591 07A0  
                    l595 07A6                      l587 079A                      l579 078A  
                    l599 07AC                      _RC0 0038                      _RC1 0039  
                    _RC2 003A                      _RD4 0044             __CFG_CPD$OFF 0000  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000  
                   _main 0777                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088            __CFG_PWRTE$ON 0000  
        __end_of_initLCD 0748                    _delay 0748                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC            main@charCount 0078  
           __end_of_main 07FC                   ??_main 0077                   ?_delay 0070  
       __end_of_dataCtrl 070F                   delay@i 0072                   delay@j 0074  
       __end_of_instCtrl 0722                ??_initLCD 0077  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_delay 0777                  ??_delay 0072  
             __pmaintext 0777                ?_dataCtrl 0070                ?_instCtrl 0070  
                __ptext0 0000                  __ptext1 0722                  __ptext2 070F  
                __ptext3 06FC                  __ptext4 0748                  _initLCD 0722  
             ??_dataCtrl 0076     end_of_initialization 07FC               ??_instCtrl 0076  
           instCtrl@INST 0076      start_initialization 07FC             dataCtrl@DATA 0076  
              ___latbits 0002        __size_of_dataCtrl 0013        __size_of_instCtrl 0013  
               ?_initLCD 0070           __size_of_delay 002F                 _dataCtrl 06FC  
       __size_of_initLCD 0026            __size_of_main 0085                 delay@MUL 0070  
               _instCtrl 070F                 main@DATA 007A  
