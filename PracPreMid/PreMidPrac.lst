

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Mar 10 13:37:45 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001D                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  0081                     	;# 
    55  0085                     	;# 
    56  0086                     	;# 
    57  0087                     	;# 
    58  0088                     	;# 
    59  0089                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  0007                     _PORTC	set	7
    80  0008                     _PORTD	set	8
    81  0001                     _TMR0	set	1
    82  005F                     _GIE	set	95
    83  0030                     _RB0	set	48
    84  0031                     _RB1	set	49
    85  0032                     _RB2	set	50
    86  0033                     _RB3	set	51
    87  0035                     _RB5	set	53
    88  005B                     _RBIE	set	91
    89  0058                     _RBIF	set	88
    90  005D                     _TMR0IE	set	93
    91  005A                     _TMR0IF	set	90
    92  0081                     _OPTION_REG	set	129
    93  0086                     _TRISB	set	134
    94  0087                     _TRISC	set	135
    95  0088                     _TRISD	set	136
    96                           
    97                           	psect	text0
    98  0000                     __ptext0:	
    99                           ; #config settings
   100                           
   101                           
   102                           ;psect for function _ISR
   103  0000                     
   104                           	psect	cinit
   105  0015                     start_initialization:	
   106  0015                     __initialization:	
   107                           
   108                           ; Clear objects allocated to BITCOMMON
   109  0015  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   110                           
   111                           ; Clear objects allocated to COMMON
   112  0016  01F8               	clrf	__pbssCOMMON& (0+127)
   113  0017  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   114  0018                     end_of_initialization:	
   115                           ;End of C runtime variable initialization code
   116                           
   117  0018                     __end_of__initialization:	
   118  0018  0183               	clrf	3
   119  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   120                           
   121                           	psect	bitbssCOMMON
   122  03B8                     __pbitbssCOMMON:	
   123  03B8                     _isPaused:	
   124  03B8                     	ds	1
   125  03B9                     _keypadPressed:	
   126  03B9                     	ds	1
   127  03BA                     _pausePressed:	
   128  03BA                     	ds	1
   129  03BB                     _timer0Overflow:	
   130  03BB                     	ds	1
   131  03BC                     _timerStopped:	
   132  03BC                     	ds	1
   133                           
   134                           	psect	bssCOMMON
   135  0078                     __pbssCOMMON:	
   136  0078                     _secondCounter:	
   137  0078                     	ds	2
   138                           
   139                           	psect	cstackCOMMON
   140  0070                     __pcstackCOMMON:	
   141  0070                     ?_ISR:	
   142  0070                     ??_ISR:	
   143                           ; 0 bytes @ 0x0
   144                           
   145  0070                     ?_instCtrl:	
   146                           ; 0 bytes @ 0x0
   147                           
   148  0070                     ?_initLCD:	
   149                           ; 0 bytes @ 0x0
   150                           
   151  0070                     ?_dataCtrl:	
   152                           ; 0 bytes @ 0x0
   153                           
   154  0070                     ?_main:	
   155                           ; 0 bytes @ 0x0
   156                           
   157                           
   158                           ; 0 bytes @ 0x0
   159  0070                     	ds	4
   160  0074                     ?_delay1:	
   161  0074                     delay1@MUL:	
   162                           ; 0 bytes @ 0x4
   163                           
   164                           
   165                           ; 2 bytes @ 0x4
   166  0074                     	ds	2
   167  0076                     ??_delay1:	
   168  0076                     ??_instCtrl:	
   169                           ; 0 bytes @ 0x6
   170                           
   171  0076                     ??_dataCtrl:	
   172                           ; 0 bytes @ 0x6
   173                           
   174  0076                     instCtrl@INST:	
   175                           ; 0 bytes @ 0x6
   176                           
   177  0076                     dataCtrl@DATA:	
   178                           ; 1 bytes @ 0x6
   179                           
   180                           
   181                           ; 1 bytes @ 0x6
   182  0076                     	ds	1
   183  0077                     ??_initLCD:	
   184  0077                     ??_updateDisplay:	
   185                           ; 0 bytes @ 0x7
   186                           
   187                           
   188                           	psect	cstackBANK0
   189  0020                     __pcstackBANK0:	
   190                           ; 0 bytes @ 0x7
   191                           
   192  0020                     delay1@i:	
   193                           
   194                           ; 2 bytes @ 0x0
   195  0020                     	ds	2
   196  0022                     delay1@j:	
   197                           
   198                           ; 2 bytes @ 0x2
   199  0022                     	ds	2
   200  0024                     ?_updateDisplay:	
   201  0024                     updateDisplay@LSB:	
   202                           ; 0 bytes @ 0x4
   203                           
   204                           
   205                           ; 1 bytes @ 0x4
   206  0024                     	ds	1
   207  0025                     updateDisplay@MSB:	
   208                           
   209                           ; 1 bytes @ 0x5
   210  0025                     	ds	1
   211  0026                     ??_main:	
   212                           
   213                           ; 0 bytes @ 0x6
   214  0026                     	ds	1
   215  0027                     main@keyData:	
   216                           
   217                           ; 1 bytes @ 0x7
   218  0027                     	ds	1
   219  0028                     main@mode:	
   220                           
   221                           ; 1 bytes @ 0x8
   222  0028                     	ds	1
   223  0029                     main@MSB:	
   224                           
   225                           ; 1 bytes @ 0x9
   226  0029                     	ds	1
   227  002A                     main@LSB:	
   228                           
   229                           ; 1 bytes @ 0xA
   230  002A                     	ds	1
   231                           
   232                           	psect	maintext
   233  001C                     __pmaintext:	
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 97 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PracPreMid\PracPreMid.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  LSB             1   10[BANK0 ] unsigned char 
   244 ;;  MSB             1    9[BANK0 ] unsigned char 
   245 ;;  mode            1    8[BANK0 ] unsigned char 
   246 ;;  keyData         1    7[BANK0 ] unsigned char 
   247 ;; Return value:  Size  Location     Type
   248 ;;		None               void
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 17F/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         0       4       0       0       0
   258 ;;      Temps:          0       1       0       0       0
   259 ;;      Totals:         0       5       0       0       0
   260 ;;Total ram usage:        5 bytes
   261 ;; Hardware stack levels required when called:    4
   262 ;; This function calls:
   263 ;;		_delay1
   264 ;;		_initLCD
   265 ;;		_updateDisplay
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _main
   273  001C                     _main:	
   274                           
   275                           ;PracPreMid.c: 98: TRISB = 0x21;
   276                           
   277                           ;incstack = 0
   278                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   279  001C  3021               	movlw	33
   280  001D  1683               	bsf	3,5	;RP0=1, select bank1
   281  001E  1303               	bcf	3,6	;RP1=0, select bank1
   282  001F  0086               	movwf	6	;volatile
   283                           
   284                           ;PracPreMid.c: 99: TRISC = 0x00;
   285  0020  0187               	clrf	7	;volatile
   286                           
   287                           ;PracPreMid.c: 100: TRISD = 0xFF;
   288  0021  30FF               	movlw	255
   289  0022  0088               	movwf	8	;volatile
   290                           
   291                           ;PracPreMid.c: 103: unsigned char keyData;
   292                           ;PracPreMid.c: 104: unsigned char mode = 0;
   293  0023  1283               	bcf	3,5	;RP0=0, select bank0
   294  0024  1303               	bcf	3,6	;RP1=0, select bank0
   295  0025  01A8               	clrf	main@mode
   296                           
   297                           ;PracPreMid.c: 105: unsigned char MSB = 0;
   298  0026  01A9               	clrf	main@MSB
   299                           
   300                           ;PracPreMid.c: 106: unsigned char LSB = 0;
   301  0027  01AA               	clrf	main@LSB
   302                           
   303                           ;PracPreMid.c: 109: initLCD();
   304  0028  120A  118A  2144  120A  118A  	fcall	_initLCD
   305                           
   306                           ;PracPreMid.c: 112: OPTION_REG = 0x04;
   307  002D  3004               	movlw	4
   308  002E  1683               	bsf	3,5	;RP0=1, select bank1
   309  002F  1303               	bcf	3,6	;RP1=0, select bank1
   310  0030  0081               	movwf	1	;volatile
   311                           
   312                           ;PracPreMid.c: 113: TMR0 = 6;
   313  0031  3006               	movlw	6
   314  0032  1283               	bcf	3,5	;RP0=0, select bank0
   315  0033  1303               	bcf	3,6	;RP1=0, select bank0
   316  0034  0081               	movwf	1	;volatile
   317                           
   318                           ;PracPreMid.c: 116: RBIF = 0;
   319  0035  100B               	bcf	11,0	;volatile
   320                           
   321                           ;PracPreMid.c: 117: RBIE = 1;
   322  0036  158B               	bsf	11,3	;volatile
   323                           
   324                           ;PracPreMid.c: 119: TMR0IF = 0;
   325  0037  110B               	bcf	11,2	;volatile
   326                           
   327                           ;PracPreMid.c: 120: TMR0IE = 1;
   328  0038  168B               	bsf	11,5	;volatile
   329                           
   330                           ;PracPreMid.c: 122: GIE = 1;
   331  0039  178B               	bsf	11,7	;volatile
   332                           
   333                           ;PracPreMid.c: 125: updateDisplay(0, 0);
   334  003A  01A4               	clrf	updateDisplay@LSB
   335  003B  3000               	movlw	0
   336  003C                     L1:	
   337  003C  120A  118A  216A  120A  118A  	fcall	_updateDisplay
   338  0041                     l966:	
   339                           ;PracPreMid.c: 127: while (1) {
   340                           
   341                           
   342                           ;PracPreMid.c: 129: if (pausePressed = 1) {
   343  0041  1577               	bsf	_pausePressed/(0+8),_pausePressed& (0+7)
   344  0042  1D77               	btfss	_pausePressed/(0+8),_pausePressed& (0+7)
   345  0043  285C               	goto	l976
   346                           
   347                           ;PracPreMid.c: 130: delay1(20);
   348  0044  3014               	movlw	20
   349  0045  00F4               	movwf	delay1@MUL
   350  0046  3000               	movlw	0
   351  0047  00F5               	movwf	delay1@MUL+1
   352  0048  120A  118A  20E2  120A  118A  	fcall	_delay1
   353  004D                     l79:	
   354                           ;PracPreMid.c: 131: while (RB0 == 1);
   355                           
   356  004D  1283               	bcf	3,5	;RP0=0, select bank0
   357  004E  1303               	bcf	3,6	;RP1=0, select bank0
   358  004F  1806               	btfsc	6,0	;volatile
   359  0050  284D               	goto	l79
   360                           
   361                           ;PracPreMid.c: 132: delay1(20);
   362  0051  3014               	movlw	20
   363  0052  00F4               	movwf	delay1@MUL
   364  0053  3000               	movlw	0
   365  0054  00F5               	movwf	delay1@MUL+1
   366  0055  120A  118A  20E2  120A  118A  	fcall	_delay1
   367                           
   368                           ;PracPreMid.c: 134: isPaused ^= isPaused;
   369  005A  1077               	bcf	_isPaused/(0+8),_isPaused& (0+7)
   370                           
   371                           ;PracPreMid.c: 135: pausePressed = 0;
   372  005B  1177               	bcf	_pausePressed/(0+8),_pausePressed& (0+7)
   373  005C                     l976:	
   374                           
   375                           ;PracPreMid.c: 136: }
   376                           ;PracPreMid.c: 139: if (!isPaused && keypadPressed) {
   377  005C  1C77               	btfss	_isPaused/(0+8),_isPaused& (0+7)
   378  005D  1CF7               	btfss	_keypadPressed/(0+8),_keypadPressed& (0+7)
   379  005E  288F               	goto	l1002
   380                           
   381                           ;PracPreMid.c: 140: keyData = PORTD & 0x0F;
   382  005F  1283               	bcf	3,5	;RP0=0, select bank0
   383  0060  1303               	bcf	3,6	;RP1=0, select bank0
   384  0061  0808               	movf	8,w	;volatile
   385  0062  390F               	andlw	15
   386  0063  00A6               	movwf	??_main
   387  0064  0826               	movf	??_main,w
   388  0065  00A7               	movwf	main@keyData
   389                           
   390                           ;PracPreMid.c: 142: if (keyData == 0x0C) {
   391  0066  0827               	movf	main@keyData,w
   392  0067  3A0C               	xorlw	12
   393  0068  1D03               	skipz
   394  0069  286D               	goto	l986
   395                           
   396                           ;PracPreMid.c: 143: mode = 1;
   397  006A  01A8               	clrf	main@mode
   398  006B  0AA8               	incf	main@mode,f
   399  006C  288D               	goto	l998
   400  006D                     l986:	
   401                           ;PracPreMid.c: 145: }
   402                           
   403                           ;PracPreMid.c: 144: timerStopped = 0;
   404                           
   405                           
   406                           ;PracPreMid.c: 146: else if (keyData == 0x0E) {
   407  006D  0827               	movf	main@keyData,w
   408  006E  3A0E               	xorlw	14
   409  006F  1D03               	skipz
   410  0070  288E               	goto	l1000
   411                           
   412                           ;PracPreMid.c: 147: mode = 2;
   413  0071  3002               	movlw	2
   414  0072  00A6               	movwf	??_main
   415  0073  0826               	movf	??_main,w
   416  0074  00A8               	movwf	main@mode
   417                           
   418                           ;PracPreMid.c: 150: if (MSB == 0 && LSB == 0) {
   419  0075  08A9               	movf	main@MSB,f
   420  0076  1D03               	skipz
   421  0077  288D               	goto	l998
   422  0078  08AA               	movf	main@LSB,f
   423  0079  1D03               	skipz
   424  007A  288D               	goto	l998
   425                           
   426                           ;PracPreMid.c: 151: MSB = 2;
   427  007B  3002               	movlw	2
   428  007C  00A6               	movwf	??_main
   429  007D  0826               	movf	??_main,w
   430  007E  00A9               	movwf	main@MSB
   431                           
   432                           ;PracPreMid.c: 152: LSB = 4;
   433  007F  3004               	movlw	4
   434  0080  00A6               	movwf	??_main
   435  0081  0826               	movf	??_main,w
   436  0082  00AA               	movwf	main@LSB
   437                           
   438                           ;PracPreMid.c: 153: updateDisplay(MSB, LSB);
   439  0083  082A               	movf	main@LSB,w
   440  0084  00A6               	movwf	??_main
   441  0085  0826               	movf	??_main,w
   442  0086  00A4               	movwf	updateDisplay@LSB
   443  0087  0829               	movf	main@MSB,w
   444  0088  120A  118A  216A  120A  118A  	fcall	_updateDisplay
   445  008D                     l998:	
   446                           
   447                           ;PracPreMid.c: 154: }
   448                           ;PracPreMid.c: 156: timerStopped = 0;
   449  008D  1277               	bcf	_timerStopped/(0+8),_timerStopped& (0+7)
   450  008E                     l1000:	
   451                           
   452                           ;PracPreMid.c: 157: }
   453                           ;PracPreMid.c: 159: keypadPressed = 0;
   454  008E  10F7               	bcf	_keypadPressed/(0+8),_keypadPressed& (0+7)
   455  008F                     l1002:	
   456                           
   457                           ;PracPreMid.c: 160: }
   458                           ;PracPreMid.c: 163: if (timer0Overflow) {
   459  008F  1DF7               	btfss	_timer0Overflow/(0+8),_timer0Overflow& (0+7)
   460  0090  2841               	goto	l966
   461                           
   462                           ;PracPreMid.c: 164: timer0Overflow = 0;
   463  0091  11F7               	bcf	_timer0Overflow/(0+8),_timer0Overflow& (0+7)
   464                           
   465                           ;PracPreMid.c: 166: if (mode == 1) {
   466  0092  1283               	bcf	3,5	;RP0=0, select bank0
   467  0093  1303               	bcf	3,6	;RP1=0, select bank0
   468  0094  0828               	movf	main@mode,w
   469  0095  3A01               	xorlw	1
   470  0096  1D03               	skipz
   471  0097  28C0               	goto	l1030
   472                           
   473                           ;PracPreMid.c: 168: if (MSB == 2 && LSB == 4) {
   474  0098  0829               	movf	main@MSB,w
   475  0099  3A02               	xorlw	2
   476  009A  1D03               	skipz
   477  009B  28AD               	goto	l1018
   478  009C  082A               	movf	main@LSB,w
   479  009D  3A04               	xorlw	4
   480  009E  1D03               	skipz
   481  009F  28AD               	goto	l1018
   482                           
   483                           ;PracPreMid.c: 169: MSB = 0;
   484  00A0  01A9               	clrf	main@MSB
   485                           
   486                           ;PracPreMid.c: 170: LSB = 0;
   487  00A1  01AA               	clrf	main@LSB
   488                           
   489                           ;PracPreMid.c: 171: updateDisplay(MSB, LSB);
   490  00A2  082A               	movf	main@LSB,w
   491  00A3  00A6               	movwf	??_main
   492  00A4  0826               	movf	??_main,w
   493  00A5  00A4               	movwf	updateDisplay@LSB
   494  00A6  0829               	movf	main@MSB,w
   495  00A7  120A  118A  216A  120A  118A  	fcall	_updateDisplay
   496  00AC  28CC               	goto	l1036
   497  00AD                     l1018:	
   498                           ;PracPreMid.c: 173: }
   499                           
   500                           ;PracPreMid.c: 172: timerStopped = 1;
   501                           
   502                           
   503                           ;PracPreMid.c: 174: else if (LSB == 9) {
   504  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   505  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   506  00AF  082A               	movf	main@LSB,w
   507  00B0  3A09               	xorlw	9
   508  00B1  1D03               	skipz
   509  00B2  28B9               	goto	l1026
   510                           
   511                           ;PracPreMid.c: 175: LSB = 0;
   512  00B3  01AA               	clrf	main@LSB
   513                           
   514                           ;PracPreMid.c: 176: MSB++;
   515  00B4  3001               	movlw	1
   516  00B5  00A6               	movwf	??_main
   517  00B6  0826               	movf	??_main,w
   518  00B7  07A9               	addwf	main@MSB,f
   519  00B8  28DC               	goto	L4
   520  00B9                     l1026:	
   521                           ;PracPreMid.c: 178: }
   522                           
   523                           ;PracPreMid.c: 177: updateDisplay(MSB, LSB);
   524                           
   525                           
   526                           ;PracPreMid.c: 179: else {
   527                           ;PracPreMid.c: 180: LSB++;
   528  00B9  3001               	movlw	1
   529  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   530  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   531  00BC  00A6               	movwf	??_main
   532  00BD  0826               	movf	??_main,w
   533  00BE  07AA               	addwf	main@LSB,f
   534  00BF  28DC               	goto	L4
   535  00C0                     l1030:	
   536                           ;PracPreMid.c: 182: }
   537                           ;PracPreMid.c: 183: }
   538                           
   539                           ;PracPreMid.c: 181: updateDisplay(MSB, LSB);
   540                           
   541                           
   542                           ;PracPreMid.c: 184: else if (mode == 2) {
   543  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   544  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   545  00C2  0828               	movf	main@mode,w
   546  00C3  3A02               	xorlw	2
   547  00C4  1D03               	skipz
   548  00C5  2841               	goto	l966
   549                           
   550                           ;PracPreMid.c: 186: if (MSB == 0 && LSB == 0) {
   551  00C6  08A9               	movf	main@MSB,f
   552  00C7  1D03               	skipz
   553  00C8  28CE               	goto	l1038
   554  00C9  08AA               	movf	main@LSB,f
   555  00CA  1D03               	skipz
   556  00CB  28CE               	goto	l1038
   557  00CC                     l1036:	
   558                           
   559                           ;PracPreMid.c: 187: timerStopped = 1;
   560  00CC  1677               	bsf	_timerStopped/(0+8),_timerStopped& (0+7)
   561                           
   562                           ;PracPreMid.c: 188: }
   563  00CD  2841               	goto	l966
   564  00CE                     l1038:	
   565                           
   566                           ;PracPreMid.c: 189: else if (LSB == 0) {
   567  00CE  08AA               	movf	main@LSB,f
   568  00CF  1D03               	skipz
   569  00D0  28D8               	goto	l1046
   570                           
   571                           ;PracPreMid.c: 190: LSB = 9;
   572  00D1  3009               	movlw	9
   573  00D2  00A6               	movwf	??_main
   574  00D3  0826               	movf	??_main,w
   575  00D4  00AA               	movwf	main@LSB
   576                           
   577                           ;PracPreMid.c: 191: MSB--;
   578  00D5  3001               	movlw	1
   579  00D6  02A9               	subwf	main@MSB,f
   580  00D7  28DC               	goto	L4
   581  00D8                     l1046:	
   582                           ;PracPreMid.c: 193: }
   583                           
   584                           ;PracPreMid.c: 192: updateDisplay(MSB, LSB);
   585                           
   586                           
   587                           ;PracPreMid.c: 194: else {
   588                           ;PracPreMid.c: 195: LSB--;
   589  00D8  3001               	movlw	1
   590  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   591  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   592  00DB  02AA               	subwf	main@LSB,f
   593  00DC                     L4:	
   594                           
   595                           ;PracPreMid.c: 196: updateDisplay(MSB, LSB);
   596  00DC  082A               	movf	main@LSB,w
   597  00DD  00A6               	movwf	??_main
   598  00DE  0826               	movf	??_main,w
   599  00DF  00A4               	movwf	updateDisplay@LSB
   600  00E0  0829               	movf	main@MSB,w
   601  00E1  283C               	goto	L1
   602  00E2                     __end_of_main:	
   603                           
   604                           	psect	text1
   605  016A                     __ptext1:	
   606 ;; *************** function _updateDisplay *****************
   607 ;; Defined at:
   608 ;;		line 87 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PracPreMid\PracPreMid.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  MSB             1    wreg     unsigned char 
   611 ;;  LSB             1    4[BANK0 ] unsigned char 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  MSB             1    5[BANK0 ] unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;		None               void
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       1       0       0       0
   624 ;;      Locals:         0       1       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         0       2       0       0       0
   627 ;;Total ram usage:        2 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    3
   630 ;; This function calls:
   631 ;;		_dataCtrl
   632 ;;		_instCtrl
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _updateDisplay
   640  016A                     _updateDisplay:	
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _updateDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   644                           ;updateDisplay@MSB stored from wreg
   645  016A  1283               	bcf	3,5	;RP0=0, select bank0
   646  016B  1303               	bcf	3,6	;RP1=0, select bank0
   647  016C  00A5               	movwf	updateDisplay@MSB
   648                           
   649                           ;PracPreMid.c: 89: instCtrl(0xC9);
   650  016D  30C9               	movlw	201
   651  016E  120A  118A  219D  120A  118A  	fcall	_instCtrl
   652                           
   653                           ;PracPreMid.c: 90: dataCtrl(MSB + '0');
   654  0173  1283               	bcf	3,5	;RP0=0, select bank0
   655  0174  1303               	bcf	3,6	;RP1=0, select bank0
   656  0175  0825               	movf	updateDisplay@MSB,w
   657  0176  3E30               	addlw	48
   658  0177  120A  118A  218A  120A  118A  	fcall	_dataCtrl
   659                           
   660                           ;PracPreMid.c: 93: instCtrl(0xCA);
   661  017C  30CA               	movlw	202
   662  017D  120A  118A  219D  120A  118A  	fcall	_instCtrl
   663                           
   664                           ;PracPreMid.c: 94: dataCtrl(LSB + '0');
   665  0182  1283               	bcf	3,5	;RP0=0, select bank0
   666  0183  1303               	bcf	3,6	;RP1=0, select bank0
   667  0184  0824               	movf	updateDisplay@LSB,w
   668  0185  3E30               	addlw	48
   669  0186  120A  118A  218A   	fcall	_dataCtrl
   670  0189  0008               	return
   671  018A                     __end_of_updateDisplay:	
   672                           
   673                           	psect	text2
   674  018A                     __ptext2:	
   675 ;; *************** function _dataCtrl *****************
   676 ;; Defined at:
   677 ;;		line 78 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PracPreMid\PracPreMid.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  DATA            1    wreg     unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  DATA            1    6[COMMON] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;		None               void
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         0       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0
   694 ;;      Totals:         1       0       0       0       0
   695 ;;Total ram usage:        1 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    2
   698 ;; This function calls:
   699 ;;		_delay1
   700 ;; This function is called by:
   701 ;;		_updateDisplay
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _dataCtrl
   707  018A                     _dataCtrl:	
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   711                           ;dataCtrl@DATA stored from wreg
   712  018A  00F6               	movwf	dataCtrl@DATA
   713                           
   714                           ;PracPreMid.c: 79: PORTC = DATA;
   715  018B  0876               	movf	dataCtrl@DATA,w
   716  018C  1283               	bcf	3,5	;RP0=0, select bank0
   717  018D  1303               	bcf	3,6	;RP1=0, select bank0
   718  018E  0087               	movwf	7	;volatile
   719                           
   720                           ;PracPreMid.c: 80: RB1 = 1;
   721  018F  1486               	bsf	6,1	;volatile
   722                           
   723                           ;PracPreMid.c: 81: RB2 = 0;
   724  0190  1106               	bcf	6,2	;volatile
   725                           
   726                           ;PracPreMid.c: 82: RB3 = 1;
   727  0191  1586               	bsf	6,3	;volatile
   728                           
   729                           ;PracPreMid.c: 83: delay1(1);
   730  0192  3001               	movlw	1
   731  0193  00F4               	movwf	delay1@MUL
   732  0194  3000               	movlw	0
   733  0195  00F5               	movwf	delay1@MUL+1
   734  0196  120A  118A  20E2   	fcall	_delay1
   735                           
   736                           ;PracPreMid.c: 84: RB3 = 0;
   737  0199  1283               	bcf	3,5	;RP0=0, select bank0
   738  019A  1303               	bcf	3,6	;RP1=0, select bank0
   739  019B  1186               	bcf	6,3	;volatile
   740  019C  0008               	return
   741  019D                     __end_of_dataCtrl:	
   742                           
   743                           	psect	text3
   744  0144                     __ptext3:	
   745 ;; *************** function _initLCD *****************
   746 ;; Defined at:
   747 ;;		line 69 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PracPreMid\PracPreMid.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;		None               void
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    3
   768 ;; This function calls:
   769 ;;		_delay1
   770 ;;		_instCtrl
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _initLCD
   778  0144                     _initLCD:	
   779                           
   780                           ;PracPreMid.c: 70: delay1(15);
   781                           
   782                           ;incstack = 0
   783                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   784  0144  300F               	movlw	15
   785  0145  00F4               	movwf	delay1@MUL
   786  0146  3000               	movlw	0
   787  0147  00F5               	movwf	delay1@MUL+1
   788  0148  120A  118A  20E2  120A  118A  	fcall	_delay1
   789                           
   790                           ;PracPreMid.c: 71: instCtrl(0x38);
   791  014D  3038               	movlw	56
   792  014E  120A  118A  219D  120A  118A  	fcall	_instCtrl
   793                           
   794                           ;PracPreMid.c: 72: instCtrl(0x08);
   795  0153  3008               	movlw	8
   796  0154  120A  118A  219D  120A  118A  	fcall	_instCtrl
   797                           
   798                           ;PracPreMid.c: 73: instCtrl(0x01);
   799  0159  3001               	movlw	1
   800  015A  120A  118A  219D  120A  118A  	fcall	_instCtrl
   801                           
   802                           ;PracPreMid.c: 74: instCtrl(0x06);
   803  015F  3006               	movlw	6
   804  0160  120A  118A  219D  120A  118A  	fcall	_instCtrl
   805                           
   806                           ;PracPreMid.c: 75: instCtrl(0x0F);
   807  0165  300F               	movlw	15
   808  0166  120A  118A  219D   	fcall	_instCtrl
   809  0169  0008               	return
   810  016A                     __end_of_initLCD:	
   811                           
   812                           	psect	text4
   813  019D                     __ptext4:	
   814 ;; *************** function _instCtrl *****************
   815 ;; Defined at:
   816 ;;		line 60 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PracPreMid\PracPreMid.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  INST            1    wreg     unsigned char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  INST            1    6[COMMON] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;		None               void
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         1       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0
   833 ;;      Totals:         1       0       0       0       0
   834 ;;Total ram usage:        1 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    2
   837 ;; This function calls:
   838 ;;		_delay1
   839 ;; This function is called by:
   840 ;;		_initLCD
   841 ;;		_updateDisplay
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _instCtrl
   847  019D                     _instCtrl:	
   848                           
   849                           ;incstack = 0
   850                           ; Regs used in _instCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   851                           ;instCtrl@INST stored from wreg
   852  019D  00F6               	movwf	instCtrl@INST
   853                           
   854                           ;PracPreMid.c: 61: PORTC = INST;
   855  019E  0876               	movf	instCtrl@INST,w
   856  019F  1283               	bcf	3,5	;RP0=0, select bank0
   857  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   858  01A1  0087               	movwf	7	;volatile
   859                           
   860                           ;PracPreMid.c: 62: RB1 = 0;
   861  01A2  1086               	bcf	6,1	;volatile
   862                           
   863                           ;PracPreMid.c: 63: RB2 = 0;
   864  01A3  1106               	bcf	6,2	;volatile
   865                           
   866                           ;PracPreMid.c: 64: RB3 = 1;
   867  01A4  1586               	bsf	6,3	;volatile
   868                           
   869                           ;PracPreMid.c: 65: delay1(1);
   870  01A5  3001               	movlw	1
   871  01A6  00F4               	movwf	delay1@MUL
   872  01A7  3000               	movlw	0
   873  01A8  00F5               	movwf	delay1@MUL+1
   874  01A9  120A  118A  20E2   	fcall	_delay1
   875                           
   876                           ;PracPreMid.c: 66: RB3 = 0;
   877  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   878  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   879  01AE  1186               	bcf	6,3	;volatile
   880  01AF  0008               	return
   881  01B0                     __end_of_instCtrl:	
   882                           
   883                           	psect	text5
   884  00E2                     __ptext5:	
   885 ;; *************** function _delay1 *****************
   886 ;; Defined at:
   887 ;;		line 20 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PracPreMid\PracPreMid.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  MUL             2    4[COMMON] int 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  j               2    2[BANK0 ] int 
   892 ;;  i               2    0[BANK0 ] int 
   893 ;; Return value:  Size  Location     Type
   894 ;;		None               void
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, btemp+1
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         2       0       0       0       0
   903 ;;      Locals:         0       4       0       0       0
   904 ;;      Temps:          0       0       0       0       0
   905 ;;      Totals:         2       4       0       0       0
   906 ;;Total ram usage:        6 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    1
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_instCtrl
   913 ;;		_initLCD
   914 ;;		_dataCtrl
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _delay1
   921  00E2                     _delay1:	
   922                           
   923                           ;PracPreMid.c: 21: int i, j;
   924                           ;PracPreMid.c: 22: for (i = MUL; i != 0; i--) {
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _delay1: [wreg+status,2+status,0+btemp+1]
   928  00E2  0875               	movf	delay1@MUL+1,w
   929  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   930  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   931  00E5  01A1               	clrf	delay1@i+1
   932  00E6  07A1               	addwf	delay1@i+1,f
   933  00E7  0874               	movf	delay1@MUL,w
   934  00E8  01A0               	clrf	delay1@i
   935  00E9  07A0               	addwf	delay1@i,f
   936  00EA                     L5:	
   937  00EA  0821               	movf	delay1@i+1,w
   938  00EB  0420               	iorwf	delay1@i,w
   939  00EC  1903               	btfsc	3,2
   940  00ED  0008               	return
   941                           
   942                           ;PracPreMid.c: 23: for (j = 0; j < 256; j++) {}
   943  00EE  01A2               	clrf	delay1@j
   944  00EF  01A3               	clrf	delay1@j+1
   945  00F0  0823               	movf	delay1@j+1,w
   946  00F1  3A80               	xorlw	128
   947  00F2  00FF               	movwf	127
   948  00F3  3081               	movlw	129
   949  00F4  027F               	subwf	127,w
   950  00F5  1D03               	skipz
   951  00F6  28F9               	goto	u515
   952  00F7  3000               	movlw	0
   953  00F8  0222               	subwf	delay1@j,w
   954  00F9                     u515:	
   955  00F9  1803               	btfsc	3,0
   956  00FA  290E               	goto	l910
   957  00FB                     l906:	
   958  00FB  3001               	movlw	1
   959  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   960  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   961  00FE  07A2               	addwf	delay1@j,f
   962  00FF  1803               	skipnc
   963  0100  0AA3               	incf	delay1@j+1,f
   964  0101  3000               	movlw	0
   965  0102  07A3               	addwf	delay1@j+1,f
   966  0103  0823               	movf	delay1@j+1,w
   967  0104  3A80               	xorlw	128
   968  0105  00FF               	movwf	127
   969  0106  3081               	movlw	129
   970  0107  027F               	subwf	127,w
   971  0108  1D03               	skipz
   972  0109  290C               	goto	u525
   973  010A  3000               	movlw	0
   974  010B  0222               	subwf	delay1@j,w
   975  010C                     u525:	
   976  010C  1C03               	skipc
   977  010D  28FB               	goto	l906
   978  010E                     l910:	
   979  010E  30FF               	movlw	255
   980  010F  1283               	bcf	3,5	;RP0=0, select bank0
   981  0110  1303               	bcf	3,6	;RP1=0, select bank0
   982  0111  07A0               	addwf	delay1@i,f
   983  0112  1803               	skipnc
   984  0113  0AA1               	incf	delay1@i+1,f
   985  0114  30FF               	movlw	255
   986  0115  07A1               	addwf	delay1@i+1,f
   987  0116  28EA               	goto	L5
   988  0117                     __end_of_delay1:	
   989                           
   990                           	psect	text6
   991  0117                     __ptext6:	
   992 ;; *************** function _ISR *****************
   993 ;; Defined at:
   994 ;;		line 27 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PracPreMid\PracPreMid.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;		None               void
  1001 ;; Registers used:
  1002 ;;		wreg, status,2
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          4       0       0       0       0
  1011 ;;      Totals:         4       0       0       0       0
  1012 ;;Total ram usage:        4 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		Interrupt level 1
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _ISR
  1023  0117                     _ISR:	
  1024                           
  1025                           ;PracPreMid.c: 28: GIE = 0;
  1026  0117  138B               	bcf	11,7	;volatile
  1027                           
  1028                           ;PracPreMid.c: 30: if (RBIF == 1) {
  1029  0118  1C0B               	btfss	11,0	;volatile
  1030  0119  2920               	goto	i1l56
  1031                           
  1032                           ;PracPreMid.c: 31: if (RB5 == 1) {
  1033  011A  1A86               	btfsc	6,5	;volatile
  1034                           
  1035                           ;PracPreMid.c: 32: keypadPressed = 1;
  1036  011B  14F7               	bsf	_keypadPressed/(0+8),_keypadPressed& (0+7)
  1037                           
  1038                           ;PracPreMid.c: 33: }
  1039                           ;PracPreMid.c: 35: if (RB0 == 1) {
  1040  011C  1C06               	btfss	6,0	;volatile
  1041  011D  291F               	goto	i1l58
  1042                           
  1043                           ;PracPreMid.c: 36: pausePressed = 1;
  1044  011E  1577               	bsf	_pausePressed/(0+8),_pausePressed& (0+7)
  1045  011F                     i1l58:	
  1046                           
  1047                           ;PracPreMid.c: 37: }
  1048                           ;PracPreMid.c: 39: RBIF = 0;
  1049  011F  100B               	bcf	11,0	;volatile
  1050  0120                     i1l56:	
  1051                           
  1052                           ;PracPreMid.c: 40: }
  1053                           ;PracPreMid.c: 42: if (TMR0IF == 1) {
  1054  0120  1D0B               	btfss	11,2	;volatile
  1055  0121  2938               	goto	i1l628
  1056                           
  1057                           ;PracPreMid.c: 43: TMR0IF = 0;
  1058  0122  110B               	bcf	11,2	;volatile
  1059                           
  1060                           ;PracPreMid.c: 44: TMR0 = 6;
  1061  0123  3006               	movlw	6
  1062  0124  0081               	movwf	1	;volatile
  1063                           
  1064                           ;PracPreMid.c: 46: if (!isPaused && !timerStopped) {
  1065  0125  1C77               	btfss	_isPaused/(0+8),_isPaused& (0+7)
  1066  0126  1A77               	btfsc	_timerStopped/(0+8),_timerStopped& (0+7)
  1067  0127  2938               	goto	i1l628
  1068                           
  1069                           ;PracPreMid.c: 47: secondCounter++;
  1070  0128  3001               	movlw	1
  1071  0129  07F8               	addwf	_secondCounter,f
  1072  012A  1803               	skipnc
  1073  012B  0AF9               	incf	_secondCounter+1,f
  1074  012C  3000               	movlw	0
  1075  012D  07F9               	addwf	_secondCounter+1,f
  1076                           
  1077                           ;PracPreMid.c: 50: if (secondCounter >= 100) {
  1078  012E  3000               	movlw	0
  1079  012F  0279               	subwf	_secondCounter+1,w
  1080  0130  3064               	movlw	100
  1081  0131  1903               	skipnz
  1082  0132  0278               	subwf	_secondCounter,w
  1083  0133  1C03               	skipc
  1084  0134  2938               	goto	i1l628
  1085                           
  1086                           ;PracPreMid.c: 51: timer0Overflow = 1;
  1087  0135  15F7               	bsf	_timer0Overflow/(0+8),_timer0Overflow& (0+7)
  1088                           
  1089                           ;PracPreMid.c: 52: secondCounter = 0;
  1090  0136  01F8               	clrf	_secondCounter
  1091  0137  01F9               	clrf	_secondCounter+1
  1092  0138                     i1l628:	
  1093                           
  1094                           ;PracPreMid.c: 53: }
  1095                           ;PracPreMid.c: 54: }
  1096                           ;PracPreMid.c: 55: }
  1097                           ;PracPreMid.c: 57: GIE = 1;
  1098  0138  178B               	bsf	11,7	;volatile
  1099  0139  0873               	movf	??_ISR+3,w
  1100  013A  00FF               	movwf	127
  1101  013B  0872               	movf	??_ISR+2,w
  1102  013C  008A               	movwf	10
  1103  013D  0871               	movf	??_ISR+1,w
  1104  013E  0084               	movwf	4
  1105  013F  0E70               	swapf	??_ISR^(0+-128),w
  1106  0140  0083               	movwf	3
  1107  0141  0EFE               	swapf	126,f
  1108  0142  0E7E               	swapf	126,w
  1109  0143  0009               	retfie
  1110  0144                     __end_of_ISR:	
  1111  007E                     btemp	set	126	;btemp
  1112  007E                     wtemp	set	126
  1113  007E                     wtemp0	set	126
  1114  0080                     wtemp1	set	128
  1115  0082                     wtemp2	set	130
  1116  0084                     wtemp3	set	132
  1117  0086                     wtemp4	set	134
  1118  0088                     wtemp5	set	136
  1119  007F                     wtemp6	set	127
  1120  007E                     ttemp	set	126
  1121  007E                     ttemp0	set	126
  1122  0081                     ttemp1	set	129
  1123  0084                     ttemp2	set	132
  1124  0087                     ttemp3	set	135
  1125  007F                     ttemp4	set	127
  1126  007E                     ltemp	set	126
  1127  007E                     ltemp0	set	126
  1128  0082                     ltemp1	set	130
  1129  0086                     ltemp2	set	134
  1130  0080                     ltemp3	set	128
  1131                           
  1132                           	psect	intentry
  1133  0004                     __pintentry:	
  1134                           ;incstack = 0
  1135                           ; Regs used in _ISR: [wreg+status,2]
  1136                           
  1137  0004                     interrupt_function:	
  1138  007E                     saved_w	set	btemp
  1139  0004  00FE               	movwf	btemp
  1140  0005  0E03               	swapf	3,w
  1141  0006  00F0               	movwf	??_ISR
  1142  0007  0804               	movf	4,w
  1143  0008  00F1               	movwf	??_ISR+1
  1144  0009  080A               	movf	10,w
  1145  000A  00F2               	movwf	??_ISR+2
  1146  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1147  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1148  000D  087F               	movf	btemp+1,w
  1149  000E  00F3               	movwf	??_ISR+3
  1150  000F  120A  118A  2917   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     11      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _updateDisplay->_dataCtrl
    _updateDisplay->_instCtrl
    _dataCtrl->_delay1
    _initLCD->_instCtrl
    _instCtrl->_delay1

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_updateDisplay
    _dataCtrl->_delay1
    _initLCD->_delay1
    _instCtrl->_delay1

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3862
                                              6 BANK0      5     5      0
                             _delay1
                            _initLCD
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (1) _updateDisplay                                        2     1      1    1563
                                              4 BANK0      2     1      1
                           _dataCtrl
                           _instCtrl
 ---------------------------------------------------------------------------------
 (2) _dataCtrl                                             1     1      0     523
                                              6 COMMON     1     1      0
                             _delay1
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0    1015
                             _delay1
                           _instCtrl
 ---------------------------------------------------------------------------------
 (2) _instCtrl                                             1     1      0     523
                                              6 COMMON     1     1      0
                             _delay1
 ---------------------------------------------------------------------------------
 (3) _delay1                                               6     4      2     492
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay1
   _initLCD
     _delay1
     _instCtrl
       _delay1
   _updateDisplay
     _dataCtrl
       _delay1
     _instCtrl
       _delay1

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Mar 10 13:37:45 2025

            __CFG_CP$OFF 0000                       l79 004D                      l910 010E  
                    l906 00FB                      l966 0041                      l976 005C  
                    l986 006D                      _GIE 005F                      l998 008D  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB5 0035             __CFG_CPD$OFF 0000  
                    u515 00F9                      _ISR 0117                      u525 010C  
                    fsr0 0004             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     l1000 008E                     l1002 008F  
                   l1030 00C0                     l1026 00B9                     l1018 00AD  
                   l1036 00CC                     l1046 00D8                     l1038 00CE  
            main@keyData 0027                     _RBIE 005B                     _RBIF 0058  
                   i1l56 0120                     i1l58 011F                     _TMR0 0001  
         ?_updateDisplay 0024             __CFG_WRT$OFF 0000                     _main 001C  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_ISR 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1l628 0138                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
          __CFG_PWRTE$ON 0000          __end_of_initLCD 016A           __pbitbssCOMMON 03B8  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 00E2                   ??_main 0026  
        ??_updateDisplay 0077                   _TMR0IE 005D                   _TMR0IF 005A  
       __end_of_dataCtrl 019D                   _delay1 00E2         __end_of_instCtrl 01B0  
              ??_initLCD 0077                   saved_w 007E  __end_of__initialization 0018  
         __pcstackCOMMON 0070               __pmaintext 001C                  ?_delay1 0074  
             __pintentry 0004            _keypadPressed 03B9                ?_dataCtrl 0070  
              ?_instCtrl 0070          __size_of_delay1 0035                  __ptext0 0000  
                __ptext1 016A                  __ptext2 018A                  __ptext3 0144  
                __ptext4 019D                  __ptext5 00E2                  __ptext6 0117  
                _initLCD 0144             __size_of_ISR 002D                  delay1@i 0020  
                delay1@j 0022               ??_dataCtrl 0076                  main@LSB 002A  
                main@MSB 0029     end_of_initialization 0018               ??_instCtrl 0076  
           instCtrl@INST 0076    __end_of_updateDisplay 018A           _timer0Overflow 03BB  
         __end_of_delay1 0117            _secondCounter 0078      start_initialization 0015  
            __end_of_ISR 0144             dataCtrl@DATA 0076                 ??_delay1 0076  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_dataCtrl 0013        __size_of_instCtrl 0013                 ?_initLCD 0070  
              delay1@MUL 0074        interrupt_function 0004             _pausePressed 03BA  
               _dataCtrl 018A         __size_of_initLCD 0026                 _isPaused 03B8  
          __size_of_main 00C6                 _instCtrl 019D                 main@mode 0028  
 __size_of_updateDisplay 0020         updateDisplay@LSB 0024         updateDisplay@MSB 0025  
               intlevel1 0000             _timerStopped 03BC               _OPTION_REG 0081  
          _updateDisplay 016A  
