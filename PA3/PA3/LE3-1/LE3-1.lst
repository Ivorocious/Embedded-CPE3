

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Feb 19 21:46:34 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  0006                     _PORTB	set	6
    76  0007                     _PORTC	set	7
    77  005F                     _GIE	set	95
    78  005C                     _INTE	set	92
    79  0059                     _INTF	set	89
    80  005D                     _TMR0IE	set	93
    81  005A                     _TMR0IF	set	90
    82  0081                     _OPTION_REG	set	129
    83  0086                     _TRISB	set	134
    84  0087                     _TRISC	set	135
    85                           
    86                           	psect	text0
    87  0000                     __ptext0:	
    88                           ; #config settings
    89                           
    90                           
    91                           ;psect for function _ISR
    92  0000                     
    93                           	psect	cinit
    94  0015                     start_initialization:	
    95  0015                     __initialization:	
    96                           
    97                           ; Clear objects allocated to BITCOMMON
    98  0015  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
    99                           
   100                           ; Clear objects allocated to COMMON
   101  0016  01F8               	clrf	__pbssCOMMON& (0+127)
   102  0017                     end_of_initialization:	
   103                           ;End of C runtime variable initialization code
   104                           
   105  0017                     __end_of__initialization:	
   106  0017  0183               	clrf	3
   107  0018  120A  118A  2856   	ljmp	_main	;jump to C main() function
   108                           
   109                           	psect	bitbssCOMMON
   110  03B8                     __pbitbssCOMMON:	
   111  03B8                     _myINTF:	
   112  03B8                     	ds	1
   113  03B9                     _myTMR0IF:	
   114  03B9                     	ds	1
   115                           
   116                           	psect	bssCOMMON
   117  0078                     __pbssCOMMON:	
   118  0078                     _counter:	
   119  0078                     	ds	1
   120                           
   121                           	psect	cstackCOMMON
   122  0070                     __pcstackCOMMON:	
   123  0070                     ?_ISR:	
   124  0070                     ??_ISR:	
   125                           ; 0 bytes @ 0x0
   126                           
   127  0070                     ?_main:	
   128                           ; 0 bytes @ 0x0
   129                           
   130                           
   131                           ; 0 bytes @ 0x0
   132  0070                     	ds	5
   133  0075                     ?_delay:	
   134  0075                     delay@count:	
   135                           ; 0 bytes @ 0x5
   136                           
   137                           
   138                           ; 2 bytes @ 0x5
   139  0075                     	ds	2
   140                           
   141                           	psect	cstackBANK0
   142  0020                     __pcstackBANK0:	
   143  0020                     ??_delay:	
   144                           
   145                           ; 0 bytes @ 0x0
   146  0020                     	ds	1
   147  0021                     delay@of_count:	
   148                           
   149                           ; 2 bytes @ 0x1
   150  0021                     	ds	2
   151  0023                     ??_main:	
   152                           
   153                           ; 0 bytes @ 0x3
   154  0023                     	ds	1
   155                           
   156                           	psect	maintext
   157  0056                     __pmaintext:	
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 76 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PA3\PA3\LE3-1\LE3-1.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;		None               void
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, pclath, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 17F/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   177 ;;      Params:         0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0
   179 ;;      Temps:          0       1       0       0       0
   180 ;;      Totals:         0       1       0       0       0
   181 ;;Total ram usage:        1 bytes
   182 ;; Hardware stack levels required when called:    2
   183 ;; This function calls:
   184 ;;		_delay
   185 ;; This function is called by:
   186 ;;		Startup code after reset
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           
   191                           ;psect for function _main
   192  0056                     _main:	
   193                           
   194                           ;LE3-1.c: 79: TRISB = 0xFF;
   195                           
   196                           ;incstack = 0
   197                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   198  0056  30FF               	movlw	255
   199  0057  1683               	bsf	3,5	;RP0=1, select bank1
   200  0058  1303               	bcf	3,6	;RP1=0, select bank1
   201  0059  0086               	movwf	6	;volatile
   202                           
   203                           ;LE3-1.c: 80: TRISC = 0x00;
   204  005A  0187               	clrf	7	;volatile
   205                           
   206                           ;LE3-1.c: 82: OPTION_REG = 0xC3;
   207  005B  30C3               	movlw	195
   208  005C  0081               	movwf	1	;volatile
   209                           
   210                           ;LE3-1.c: 84: INTF = 0;
   211  005D  108B               	bcf	11,1	;volatile
   212                           
   213                           ;LE3-1.c: 85: INTE = 1;
   214  005E  160B               	bsf	11,4	;volatile
   215                           
   216                           ;LE3-1.c: 87: TMR0IF = 0;
   217  005F  110B               	bcf	11,2	;volatile
   218                           
   219                           ;LE3-1.c: 88: TMR0IE = 1;
   220  0060  168B               	bsf	11,5	;volatile
   221                           
   222                           ;LE3-1.c: 90: GIE = 1;
   223  0061  178B               	bsf	11,7	;volatile
   224                           
   225                           ;LE3-1.c: 93: PORTC = 0x00;
   226  0062  1283               	bcf	3,5	;RP0=0, select bank0
   227  0063  1303               	bcf	3,6	;RP1=0, select bank0
   228  0064  0187               	clrf	7	;volatile
   229  0065                     l617:	
   230                           ;LE3-1.c: 94: while (1)
   231                           
   232                           
   233                           ;LE3-1.c: 95: {
   234                           ;LE3-1.c: 96: if (myINTF == 0)
   235  0065  1877               	btfsc	_myINTF/(0+8),_myINTF& (0+7)
   236  0066  286F               	goto	l625
   237                           
   238                           ;LE3-1.c: 97: {
   239                           ;LE3-1.c: 98: counter++;
   240  0067  3001               	movlw	1
   241  0068  00A3               	movwf	??_main
   242  0069  0823               	movf	??_main,w
   243  006A  07F8               	addwf	_counter,f
   244                           
   245                           ;LE3-1.c: 100: if (counter == 0x0A)
   246  006B  0878               	movf	_counter,w
   247  006C  3A0A               	xorlw	10
   248  006D  1903               	btfsc	3,2
   249                           
   250                           ;LE3-1.c: 101: {
   251                           ;LE3-1.c: 102: counter = 0x00;
   252  006E  01F8               	clrf	_counter
   253  006F                     l625:	
   254                           ;LE3-1.c: 119: else
   255                           ;LE3-1.c: 120: {
   256                           
   257                           ;LE3-1.c: 103: }
   258                           ;LE3-1.c: 108: }
   259                           
   260                           
   261                           ;LE3-1.c: 122: }
   262                           ;LE3-1.c: 123: delay(195);
   263  006F  30C3               	movlw	195
   264  0070  00F5               	movwf	delay@count
   265  0071  3000               	movlw	0
   266  0072  00F6               	movwf	delay@count+1
   267  0073  120A  118A  207D  120A  118A  	fcall	_delay
   268                           
   269                           ;LE3-1.c: 124: PORTC = counter;
   270  0078  0878               	movf	_counter,w
   271  0079  1283               	bcf	3,5	;RP0=0, select bank0
   272  007A  1303               	bcf	3,6	;RP1=0, select bank0
   273  007B  0087               	movwf	7	;volatile
   274  007C  2865               	goto	l617
   275  007D                     __end_of_main:	
   276                           
   277                           	psect	text1
   278  007D                     __ptext1:	
   279 ;; *************** function _delay *****************
   280 ;; Defined at:
   281 ;;		line 62 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PA3\PA3\LE3-1\LE3-1.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;  count           2    5[COMMON] int 
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  of_count        2    1[BANK0 ] int 
   286 ;; Return value:  Size  Location     Type
   287 ;;		None               void
   288 ;; Registers used:
   289 ;;		wreg, status,2
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   295 ;;      Params:         2       0       0       0       0
   296 ;;      Locals:         0       2       0       0       0
   297 ;;      Temps:          0       1       0       0       0
   298 ;;      Totals:         2       3       0       0       0
   299 ;;Total ram usage:        5 bytes
   300 ;; Hardware stack levels used:    1
   301 ;; Hardware stack levels required when called:    1
   302 ;; This function calls:
   303 ;;		Nothing
   304 ;; This function is called by:
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           
   310                           ;psect for function _delay
   311  007D                     _delay:	
   312                           
   313                           ;LE3-1.c: 64: int of_count = 0;
   314                           
   315                           ;incstack = 0
   316                           ; Regs used in _delay: [wreg+status,2]
   317  007D  1283               	bcf	3,5	;RP0=0, select bank0
   318  007E  1303               	bcf	3,6	;RP1=0, select bank0
   319  007F  01A1               	clrf	delay@of_count
   320  0080  01A2               	clrf	delay@of_count+1
   321  0081                     l39:	
   322                           ;LE3-1.c: 66: while (of_count < count)
   323                           
   324  0081  1283               	bcf	3,5	;RP0=0, select bank0
   325  0082  1303               	bcf	3,6	;RP1=0, select bank0
   326  0083  0822               	movf	delay@of_count+1,w
   327  0084  3A80               	xorlw	128
   328  0085  00A0               	movwf	??_delay
   329  0086  0876               	movf	delay@count+1,w
   330  0087  3A80               	xorlw	128
   331  0088  0220               	subwf	??_delay,w
   332  0089  1D03               	skipz
   333  008A  288D               	goto	u165
   334  008B  0875               	movf	delay@count,w
   335  008C  0221               	subwf	delay@of_count,w
   336  008D                     u165:	
   337  008D  1803               	btfsc	3,0
   338  008E  0008               	return
   339                           
   340                           ;LE3-1.c: 67: {
   341                           ;LE3-1.c: 68: if(myTMR0IF == 1)
   342  008F  1CF7               	btfss	_myTMR0IF/(0+8),_myTMR0IF& (0+7)
   343  0090  2881               	goto	l39
   344                           
   345                           ;LE3-1.c: 69: {
   346                           ;LE3-1.c: 70: of_count++;
   347  0091  3001               	movlw	1
   348  0092  1283               	bcf	3,5	;RP0=0, select bank0
   349  0093  1303               	bcf	3,6	;RP1=0, select bank0
   350  0094  07A1               	addwf	delay@of_count,f
   351  0095  1803               	skipnc
   352  0096  0AA2               	incf	delay@of_count+1,f
   353  0097  3000               	movlw	0
   354  0098  07A2               	addwf	delay@of_count+1,f
   355                           
   356                           ;LE3-1.c: 71: myTMR0IF = 0;
   357  0099  10F7               	bcf	_myTMR0IF/(0+8),_myTMR0IF& (0+7)
   358  009A  2881               	goto	l39
   359  009B                     __end_of_delay:	
   360                           
   361                           	psect	text2
   362  001B                     __ptext2:	
   363 ;; *************** function _ISR *****************
   364 ;; Defined at:
   365 ;;		line 16 in file "C:\Users\ivorr\OneDrive\Documents\abEMBEDDED\PA3\PA3\LE3-1\LE3-1.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;		None               void
   372 ;; Registers used:
   373 ;;		wreg
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0
   381 ;;      Temps:          5       0       0       0       0
   382 ;;      Totals:         5       0       0       0       0
   383 ;;Total ram usage:        5 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		Interrupt level 1
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           
   393                           ;psect for function _ISR
   394  001B                     _ISR:	
   395                           
   396                           ;LE3-1.c: 18: GIE = 0;
   397  001B  138B               	bcf	11,7	;volatile
   398                           
   399                           ;LE3-1.c: 20: if(INTF == 1)
   400  001C  1C8B               	btfss	11,1	;volatile
   401  001D  2846               	goto	i1l29
   402                           
   403                           ;LE3-1.c: 21: {
   404                           ;LE3-1.c: 22: INTF = 0;
   405  001E  108B               	bcf	11,1	;volatile
   406                           
   407                           ;LE3-1.c: 25: if (PORTB == 0x01)
   408  001F  0806               	movf	6,w	;volatile
   409  0020  3A01               	xorlw	1
   410  0021  1D03               	skipz
   411  0022  2827               	goto	i1l30
   412                           
   413                           ;LE3-1.c: 26: {
   414                           ;LE3-1.c: 27: PORTC = 0x01;
   415  0023  3001               	movlw	1
   416  0024  0087               	movwf	7	;volatile
   417                           
   418                           ;LE3-1.c: 28: counter = 0x01;
   419  0025  01F8               	clrf	_counter
   420  0026  0AF8               	incf	_counter,f
   421  0027                     i1l30:	
   422                           
   423                           ;LE3-1.c: 30: }
   424                           ;LE3-1.c: 32: if (PORTB == 0x03)
   425  0027  0806               	movf	6,w	;volatile
   426  0028  3A03               	xorlw	3
   427  0029  1D03               	skipz
   428  002A  2831               	goto	i1l31
   429                           
   430                           ;LE3-1.c: 33: {
   431                           ;LE3-1.c: 34: PORTC = 0x02;
   432  002B  3002               	movlw	2
   433  002C  0087               	movwf	7	;volatile
   434                           
   435                           ;LE3-1.c: 35: counter = 0x02;
   436  002D  3002               	movlw	2
   437  002E  00F0               	movwf	??_ISR
   438  002F  0870               	movf	??_ISR,w
   439  0030  00F8               	movwf	_counter
   440  0031                     i1l31:	
   441                           
   442                           ;LE3-1.c: 37: }
   443                           ;LE3-1.c: 39: if (PORTB == 0x07)
   444  0031  0806               	movf	6,w	;volatile
   445  0032  3A07               	xorlw	7
   446  0033  1D03               	skipz
   447  0034  283B               	goto	i1l32
   448                           
   449                           ;LE3-1.c: 40: {
   450                           ;LE3-1.c: 41: PORTC = 0x03;
   451  0035  3003               	movlw	3
   452  0036  0087               	movwf	7	;volatile
   453                           
   454                           ;LE3-1.c: 42: counter = 0x03;
   455  0037  3003               	movlw	3
   456  0038  00F0               	movwf	??_ISR
   457  0039  0870               	movf	??_ISR,w
   458  003A  00F8               	movwf	_counter
   459  003B                     i1l32:	
   460                           
   461                           ;LE3-1.c: 44: }
   462                           ;LE3-1.c: 45: if (PORTB == 0x09)
   463  003B  0806               	movf	6,w	;volatile
   464  003C  3A09               	xorlw	9
   465  003D  1D03               	skipz
   466  003E  284A               	goto	i1l34
   467                           
   468                           ;LE3-1.c: 46: {
   469                           ;LE3-1.c: 47: PORTC = 0x04;
   470  003F  3004               	movlw	4
   471  0040  0087               	movwf	7	;volatile
   472                           
   473                           ;LE3-1.c: 48: counter = 0x04;
   474  0041  3004               	movlw	4
   475  0042  00F0               	movwf	??_ISR
   476  0043  0870               	movf	??_ISR,w
   477  0044  00F8               	movwf	_counter
   478                           
   479                           ;LE3-1.c: 49: }
   480                           ;LE3-1.c: 51: }
   481  0045  284A               	goto	i1l34
   482  0046                     i1l29:	
   483                           
   484                           ;LE3-1.c: 54: else if(TMR0IF == 1)
   485  0046  1D0B               	btfss	11,2	;volatile
   486  0047  284A               	goto	i1l34
   487                           
   488                           ;LE3-1.c: 55: {
   489                           ;LE3-1.c: 56: TMR0IF = 0;
   490  0048  110B               	bcf	11,2	;volatile
   491                           
   492                           ;LE3-1.c: 57: myTMR0IF = 1;
   493  0049  14F7               	bsf	_myTMR0IF/(0+8),_myTMR0IF& (0+7)
   494  004A                     i1l34:	
   495                           
   496                           ;LE3-1.c: 58: }
   497                           ;LE3-1.c: 59: GIE = 1;
   498  004A  178B               	bsf	11,7	;volatile
   499  004B  0874               	movf	??_ISR+4,w
   500  004C  00FF               	movwf	127
   501  004D  0873               	movf	??_ISR+3,w
   502  004E  008A               	movwf	10
   503  004F  0872               	movf	??_ISR+2,w
   504  0050  0084               	movwf	4
   505  0051  0E71               	swapf	(??_ISR+1)^(0+-128),w
   506  0052  0083               	movwf	3
   507  0053  0EFE               	swapf	126,f
   508  0054  0E7E               	swapf	126,w
   509  0055  0009               	retfie
   510  0056                     __end_of_ISR:	
   511  007E                     btemp	set	126	;btemp
   512  007E                     wtemp	set	126
   513  007E                     wtemp0	set	126
   514  0080                     wtemp1	set	128
   515  0082                     wtemp2	set	130
   516  0084                     wtemp3	set	132
   517  0086                     wtemp4	set	134
   518  0088                     wtemp5	set	136
   519  007F                     wtemp6	set	127
   520  007E                     ttemp	set	126
   521  007E                     ttemp0	set	126
   522  0081                     ttemp1	set	129
   523  0084                     ttemp2	set	132
   524  0087                     ttemp3	set	135
   525  007F                     ttemp4	set	127
   526  007E                     ltemp	set	126
   527  007E                     ltemp0	set	126
   528  0082                     ltemp1	set	130
   529  0086                     ltemp2	set	134
   530  0080                     ltemp3	set	128
   531                           
   532                           	psect	intentry
   533  0004                     __pintentry:	
   534                           ;incstack = 0
   535                           ; Regs used in _ISR: [wreg]
   536                           
   537  0004                     interrupt_function:	
   538  007E                     saved_w	set	btemp
   539  0004  00FE               	movwf	btemp
   540  0005  0E03               	swapf	3,w
   541  0006  00F1               	movwf	??_ISR+1
   542  0007  0804               	movf	4,w
   543  0008  00F2               	movwf	??_ISR+2
   544  0009  080A               	movf	10,w
   545  000A  00F3               	movwf	??_ISR+3
   546  000B  1283               	bcf	3,5	;RP0=0, select bank0
   547  000C  1303               	bcf	3,6	;RP1=0, select bank0
   548  000D  087F               	movf	btemp+1,w
   549  000E  00F4               	movwf	??_ISR+4
   550  000F  120A  118A  281B   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_delay

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     133
                                              3 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2     133
                                              5 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Feb 19 21:46:34 2025

            __CFG_CP$OFF 0000                       l39 0081                      l625 006F  
                    l617 0065                      _GIE 005F                      u165 008D  
           __CFG_CPD$OFF 0000                      _ISR 001B                      fsr0 0004  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   _INTE 005C                     i1l30 0027                     _INTF 0059  
                   i1l31 0031                     i1l32 003B                     i1l34 004A  
                   i1l29 0046             __CFG_WRT$OFF 0000                     _main 0056  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_ISR 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087            __CFG_PWRTE$ON 0000                    _delay 007D  
         __pbitbssCOMMON 03B8                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0015             __end_of_main 007D  
                 ??_main 0023                   ?_delay 0075                   _TMR0IE 005D  
                 _TMR0IF 005A                   _myINTF 03B8                   saved_w 007E  
__end_of__initialization 0017           __pcstackCOMMON 0070            __end_of_delay 009B  
                ??_delay 0020               __pmaintext 0056               __pintentry 0004  
                __ptext0 0000                  __ptext1 007D                  __ptext2 001B  
          delay@of_count 0021             __size_of_ISR 003B                  _counter 0078  
             delay@count 0075     end_of_initialization 0017      start_initialization 0015  
            __end_of_ISR 0056              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020           __size_of_delay 001E        interrupt_function 0004  
               _myTMR0IF 03B9            __size_of_main 0027                 intlevel1 0000  
             _OPTION_REG 0081  
